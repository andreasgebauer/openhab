package org.openhab.model.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.openhab.model.services.SitemapGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSitemapParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_INT", "RULE_FLOAT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'sitemap'", "'label='", "'icon='", "'{'", "'}'", "'Frame'", "'item='", "'labelcolor=['", "','", "']'", "'valuecolor=['", "'visibility=['", "'Text'", "'Group'", "'Image'", "'url='", "'refresh='", "'iconcolor=['", "'Video'", "'encoding='", "'Chart'", "'service='", "'period='", "'Webview'", "'height='", "'Mapview'", "'Switch'", "'mappings=['", "'Slider'", "'sendFrequency='", "'switchSupport'", "'Selection'", "'List'", "'separator='", "'Setpoint'", "'minValue='", "'maxValue='", "'step='", "'Colorpicker'", "'='", "'=='", "'>'", "'<'", "'>='", "'<='", "'!='", "'-'", "'+'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__12=12;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int RULE_ID=4;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=6;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=9;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=10;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=7;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalSitemapParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSitemapParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSitemapParser.tokenNames; }
    public String getGrammarFileName() { return "../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g"; }



     	private SitemapGrammarAccess grammarAccess;
     	
        public InternalSitemapParser(TokenStream input, SitemapGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "SitemapModel";	
       	}
       	
       	@Override
       	protected SitemapGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleSitemapModel"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:67:1: entryRuleSitemapModel returns [EObject current=null] : iv_ruleSitemapModel= ruleSitemapModel EOF ;
    public final EObject entryRuleSitemapModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSitemapModel = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:68:2: (iv_ruleSitemapModel= ruleSitemapModel EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:69:2: iv_ruleSitemapModel= ruleSitemapModel EOF
            {
             newCompositeNode(grammarAccess.getSitemapModelRule()); 
            pushFollow(FOLLOW_ruleSitemapModel_in_entryRuleSitemapModel75);
            iv_ruleSitemapModel=ruleSitemapModel();

            state._fsp--;

             current =iv_ruleSitemapModel; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSitemapModel85); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSitemapModel"


    // $ANTLR start "ruleSitemapModel"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:76:1: ruleSitemapModel returns [EObject current=null] : (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap ) ;
    public final EObject ruleSitemapModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Sitemap_1 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:79:28: ( (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:80:1: (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:80:1: (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:80:3: otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap
            {
            otherlv_0=(Token)match(input,12,FOLLOW_12_in_ruleSitemapModel122); 

                	newLeafNode(otherlv_0, grammarAccess.getSitemapModelAccess().getSitemapKeyword_0());
                
             
                    newCompositeNode(grammarAccess.getSitemapModelAccess().getSitemapParserRuleCall_1()); 
                
            pushFollow(FOLLOW_ruleSitemap_in_ruleSitemapModel144);
            this_Sitemap_1=ruleSitemap();

            state._fsp--;

             
                    current = this_Sitemap_1; 
                    afterParserOrEnumRuleCall();
                

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSitemapModel"


    // $ANTLR start "entryRuleSitemap"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:101:1: entryRuleSitemap returns [EObject current=null] : iv_ruleSitemap= ruleSitemap EOF ;
    public final EObject entryRuleSitemap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSitemap = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:102:2: (iv_ruleSitemap= ruleSitemap EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:103:2: iv_ruleSitemap= ruleSitemap EOF
            {
             newCompositeNode(grammarAccess.getSitemapRule()); 
            pushFollow(FOLLOW_ruleSitemap_in_entryRuleSitemap179);
            iv_ruleSitemap=ruleSitemap();

            state._fsp--;

             current =iv_ruleSitemap; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSitemap189); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSitemap"


    // $ANTLR start "ruleSitemap"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:110:1: ruleSitemap returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' ) ;
    public final EObject ruleSitemap() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token lv_icon_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_children_6_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:113:28: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:1: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:1: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:2: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}'
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:2: ( (lv_name_0_0= RULE_ID ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:115:1: (lv_name_0_0= RULE_ID )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:115:1: (lv_name_0_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:116:3: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSitemap231); 

            			newLeafNode(lv_name_0_0, grammarAccess.getSitemapAccess().getNameIDTerminalRuleCall_0_0()); 
            		

            	        if (current==null) {
            	            current = createModelElement(grammarAccess.getSitemapRule());
            	        }
                   		setWithLastConsumed(
                   			current, 
                   			"name",
                    		lv_name_0_0, 
                    		"ID");
            	    

            }


            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:132:2: (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==13) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:132:4: otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) )
                    {
                    otherlv_1=(Token)match(input,13,FOLLOW_13_in_ruleSitemap249); 

                        	newLeafNode(otherlv_1, grammarAccess.getSitemapAccess().getLabelKeyword_1_0());
                        
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:136:1: ( (lv_label_2_0= RULE_STRING ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:137:1: (lv_label_2_0= RULE_STRING )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:137:1: (lv_label_2_0= RULE_STRING )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:138:3: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSitemap266); 

                    			newLeafNode(lv_label_2_0, grammarAccess.getSitemapAccess().getLabelSTRINGTerminalRuleCall_1_1_0()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getSitemapRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"label",
                            		lv_label_2_0, 
                            		"STRING");
                    	    

                    }


                    }


                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:154:4: (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==14) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:154:6: otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,14,FOLLOW_14_in_ruleSitemap286); 

                        	newLeafNode(otherlv_3, grammarAccess.getSitemapAccess().getIconKeyword_2_0());
                        
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:158:1: ( (lv_icon_4_0= RULE_STRING ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:159:1: (lv_icon_4_0= RULE_STRING )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:159:1: (lv_icon_4_0= RULE_STRING )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:160:3: lv_icon_4_0= RULE_STRING
                    {
                    lv_icon_4_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSitemap303); 

                    			newLeafNode(lv_icon_4_0, grammarAccess.getSitemapAccess().getIconSTRINGTerminalRuleCall_2_1_0()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getSitemapRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"icon",
                            		lv_icon_4_0, 
                            		"STRING");
                    	    

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,15,FOLLOW_15_in_ruleSitemap322); 

                	newLeafNode(otherlv_5, grammarAccess.getSitemapAccess().getLeftCurlyBracketKeyword_3());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:180:1: ( (lv_children_6_0= ruleWidget ) )+
            int cnt3=0;
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==17||(LA3_0>=24 && LA3_0<=26)||LA3_0==30||LA3_0==32||LA3_0==35||(LA3_0>=37 && LA3_0<=38)||LA3_0==40||(LA3_0>=43 && LA3_0<=44)||LA3_0==46||LA3_0==50) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:181:1: (lv_children_6_0= ruleWidget )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:181:1: (lv_children_6_0= ruleWidget )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:182:3: lv_children_6_0= ruleWidget
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSitemapAccess().getChildrenWidgetParserRuleCall_4_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleWidget_in_ruleSitemap343);
            	    lv_children_6_0=ruleWidget();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSitemapRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"children",
            	            		lv_children_6_0, 
            	            		"Widget");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt3 >= 1 ) break loop3;
                        EarlyExitException eee =
                            new EarlyExitException(3, input);
                        throw eee;
                }
                cnt3++;
            } while (true);

            otherlv_7=(Token)match(input,16,FOLLOW_16_in_ruleSitemap356); 

                	newLeafNode(otherlv_7, grammarAccess.getSitemapAccess().getRightCurlyBracketKeyword_5());
                

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSitemap"


    // $ANTLR start "entryRuleWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:210:1: entryRuleWidget returns [EObject current=null] : iv_ruleWidget= ruleWidget EOF ;
    public final EObject entryRuleWidget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWidget = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:211:2: (iv_ruleWidget= ruleWidget EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:212:2: iv_ruleWidget= ruleWidget EOF
            {
             newCompositeNode(grammarAccess.getWidgetRule()); 
            pushFollow(FOLLOW_ruleWidget_in_entryRuleWidget392);
            iv_ruleWidget=ruleWidget();

            state._fsp--;

             current =iv_ruleWidget; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWidget402); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWidget"


    // $ANTLR start "ruleWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:219:1: ruleWidget returns [EObject current=null] : (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget ) ;
    public final EObject ruleWidget() throws RecognitionException {
        EObject current = null;

        EObject this_LinkableWidget_0 = null;

        EObject this_NonLinkableWidget_1 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:222:28: ( (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:223:1: (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:223:1: (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17||(LA4_0>=24 && LA4_0<=26)) ) {
                alt4=1;
            }
            else if ( (LA4_0==30||LA4_0==32||LA4_0==35||(LA4_0>=37 && LA4_0<=38)||LA4_0==40||(LA4_0>=43 && LA4_0<=44)||LA4_0==46||LA4_0==50) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:224:5: this_LinkableWidget_0= ruleLinkableWidget
                    {
                     
                            newCompositeNode(grammarAccess.getWidgetAccess().getLinkableWidgetParserRuleCall_0()); 
                        
                    pushFollow(FOLLOW_ruleLinkableWidget_in_ruleWidget449);
                    this_LinkableWidget_0=ruleLinkableWidget();

                    state._fsp--;

                     
                            current = this_LinkableWidget_0; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:234:5: this_NonLinkableWidget_1= ruleNonLinkableWidget
                    {
                     
                            newCompositeNode(grammarAccess.getWidgetAccess().getNonLinkableWidgetParserRuleCall_1()); 
                        
                    pushFollow(FOLLOW_ruleNonLinkableWidget_in_ruleWidget476);
                    this_NonLinkableWidget_1=ruleNonLinkableWidget();

                    state._fsp--;

                     
                            current = this_NonLinkableWidget_1; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWidget"


    // $ANTLR start "entryRuleNonLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:250:1: entryRuleNonLinkableWidget returns [EObject current=null] : iv_ruleNonLinkableWidget= ruleNonLinkableWidget EOF ;
    public final EObject entryRuleNonLinkableWidget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonLinkableWidget = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:251:2: (iv_ruleNonLinkableWidget= ruleNonLinkableWidget EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:252:2: iv_ruleNonLinkableWidget= ruleNonLinkableWidget EOF
            {
             newCompositeNode(grammarAccess.getNonLinkableWidgetRule()); 
            pushFollow(FOLLOW_ruleNonLinkableWidget_in_entryRuleNonLinkableWidget511);
            iv_ruleNonLinkableWidget=ruleNonLinkableWidget();

            state._fsp--;

             current =iv_ruleNonLinkableWidget; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNonLinkableWidget521); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonLinkableWidget"


    // $ANTLR start "ruleNonLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:259:1: ruleNonLinkableWidget returns [EObject current=null] : (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker | this_Mapview_9= ruleMapview ) ;
    public final EObject ruleNonLinkableWidget() throws RecognitionException {
        EObject current = null;

        EObject this_Switch_0 = null;

        EObject this_Selection_1 = null;

        EObject this_Slider_2 = null;

        EObject this_List_3 = null;

        EObject this_Setpoint_4 = null;

        EObject this_Video_5 = null;

        EObject this_Chart_6 = null;

        EObject this_Webview_7 = null;

        EObject this_Colorpicker_8 = null;

        EObject this_Mapview_9 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:262:28: ( (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker | this_Mapview_9= ruleMapview ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:263:1: (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker | this_Mapview_9= ruleMapview )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:263:1: (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker | this_Mapview_9= ruleMapview )
            int alt5=10;
            switch ( input.LA(1) ) {
            case 38:
                {
                alt5=1;
                }
                break;
            case 43:
                {
                alt5=2;
                }
                break;
            case 40:
                {
                alt5=3;
                }
                break;
            case 44:
                {
                alt5=4;
                }
                break;
            case 46:
                {
                alt5=5;
                }
                break;
            case 30:
                {
                alt5=6;
                }
                break;
            case 32:
                {
                alt5=7;
                }
                break;
            case 35:
                {
                alt5=8;
                }
                break;
            case 50:
                {
                alt5=9;
                }
                break;
            case 37:
                {
                alt5=10;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:264:5: this_Switch_0= ruleSwitch
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSwitchParserRuleCall_0()); 
                        
                    pushFollow(FOLLOW_ruleSwitch_in_ruleNonLinkableWidget568);
                    this_Switch_0=ruleSwitch();

                    state._fsp--;

                     
                            current = this_Switch_0; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:274:5: this_Selection_1= ruleSelection
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSelectionParserRuleCall_1()); 
                        
                    pushFollow(FOLLOW_ruleSelection_in_ruleNonLinkableWidget595);
                    this_Selection_1=ruleSelection();

                    state._fsp--;

                     
                            current = this_Selection_1; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:284:5: this_Slider_2= ruleSlider
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSliderParserRuleCall_2()); 
                        
                    pushFollow(FOLLOW_ruleSlider_in_ruleNonLinkableWidget622);
                    this_Slider_2=ruleSlider();

                    state._fsp--;

                     
                            current = this_Slider_2; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:294:5: this_List_3= ruleList
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getListParserRuleCall_3()); 
                        
                    pushFollow(FOLLOW_ruleList_in_ruleNonLinkableWidget649);
                    this_List_3=ruleList();

                    state._fsp--;

                     
                            current = this_List_3; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 5 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:304:5: this_Setpoint_4= ruleSetpoint
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSetpointParserRuleCall_4()); 
                        
                    pushFollow(FOLLOW_ruleSetpoint_in_ruleNonLinkableWidget676);
                    this_Setpoint_4=ruleSetpoint();

                    state._fsp--;

                     
                            current = this_Setpoint_4; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 6 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:314:5: this_Video_5= ruleVideo
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getVideoParserRuleCall_5()); 
                        
                    pushFollow(FOLLOW_ruleVideo_in_ruleNonLinkableWidget703);
                    this_Video_5=ruleVideo();

                    state._fsp--;

                     
                            current = this_Video_5; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 7 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:324:5: this_Chart_6= ruleChart
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getChartParserRuleCall_6()); 
                        
                    pushFollow(FOLLOW_ruleChart_in_ruleNonLinkableWidget730);
                    this_Chart_6=ruleChart();

                    state._fsp--;

                     
                            current = this_Chart_6; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 8 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:334:5: this_Webview_7= ruleWebview
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getWebviewParserRuleCall_7()); 
                        
                    pushFollow(FOLLOW_ruleWebview_in_ruleNonLinkableWidget757);
                    this_Webview_7=ruleWebview();

                    state._fsp--;

                     
                            current = this_Webview_7; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 9 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:344:5: this_Colorpicker_8= ruleColorpicker
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getColorpickerParserRuleCall_8()); 
                        
                    pushFollow(FOLLOW_ruleColorpicker_in_ruleNonLinkableWidget784);
                    this_Colorpicker_8=ruleColorpicker();

                    state._fsp--;

                     
                            current = this_Colorpicker_8; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 10 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:354:5: this_Mapview_9= ruleMapview
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getMapviewParserRuleCall_9()); 
                        
                    pushFollow(FOLLOW_ruleMapview_in_ruleNonLinkableWidget811);
                    this_Mapview_9=ruleMapview();

                    state._fsp--;

                     
                            current = this_Mapview_9; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonLinkableWidget"


    // $ANTLR start "entryRuleLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:370:1: entryRuleLinkableWidget returns [EObject current=null] : iv_ruleLinkableWidget= ruleLinkableWidget EOF ;
    public final EObject entryRuleLinkableWidget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLinkableWidget = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:371:2: (iv_ruleLinkableWidget= ruleLinkableWidget EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:372:2: iv_ruleLinkableWidget= ruleLinkableWidget EOF
            {
             newCompositeNode(grammarAccess.getLinkableWidgetRule()); 
            pushFollow(FOLLOW_ruleLinkableWidget_in_entryRuleLinkableWidget846);
            iv_ruleLinkableWidget=ruleLinkableWidget();

            state._fsp--;

             current =iv_ruleLinkableWidget; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLinkableWidget856); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLinkableWidget"


    // $ANTLR start "ruleLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:379:1: ruleLinkableWidget returns [EObject current=null] : ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? ) ;
    public final EObject ruleLinkableWidget() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_Text_0 = null;

        EObject this_Group_1 = null;

        EObject this_Image_2 = null;

        EObject this_Frame_3 = null;

        EObject lv_children_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:382:28: ( ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:383:1: ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:383:1: ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:383:2: (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:383:2: (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame )
            int alt6=4;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt6=1;
                }
                break;
            case 25:
                {
                alt6=2;
                }
                break;
            case 26:
                {
                alt6=3;
                }
                break;
            case 17:
                {
                alt6=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:384:5: this_Text_0= ruleText
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getTextParserRuleCall_0_0()); 
                        
                    pushFollow(FOLLOW_ruleText_in_ruleLinkableWidget904);
                    this_Text_0=ruleText();

                    state._fsp--;

                     
                            current = this_Text_0; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:394:5: this_Group_1= ruleGroup
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getGroupParserRuleCall_0_1()); 
                        
                    pushFollow(FOLLOW_ruleGroup_in_ruleLinkableWidget931);
                    this_Group_1=ruleGroup();

                    state._fsp--;

                     
                            current = this_Group_1; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:404:5: this_Image_2= ruleImage
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getImageParserRuleCall_0_2()); 
                        
                    pushFollow(FOLLOW_ruleImage_in_ruleLinkableWidget958);
                    this_Image_2=ruleImage();

                    state._fsp--;

                     
                            current = this_Image_2; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:414:5: this_Frame_3= ruleFrame
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getFrameParserRuleCall_0_3()); 
                        
                    pushFollow(FOLLOW_ruleFrame_in_ruleLinkableWidget985);
                    this_Frame_3=ruleFrame();

                    state._fsp--;

                     
                            current = this_Frame_3; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:422:2: (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==15) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:422:4: otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}'
                    {
                    otherlv_4=(Token)match(input,15,FOLLOW_15_in_ruleLinkableWidget998); 

                        	newLeafNode(otherlv_4, grammarAccess.getLinkableWidgetAccess().getLeftCurlyBracketKeyword_1_0());
                        
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:426:1: ( (lv_children_5_0= ruleWidget ) )+
                    int cnt7=0;
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==17||(LA7_0>=24 && LA7_0<=26)||LA7_0==30||LA7_0==32||LA7_0==35||(LA7_0>=37 && LA7_0<=38)||LA7_0==40||(LA7_0>=43 && LA7_0<=44)||LA7_0==46||LA7_0==50) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:427:1: (lv_children_5_0= ruleWidget )
                    	    {
                    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:427:1: (lv_children_5_0= ruleWidget )
                    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:428:3: lv_children_5_0= ruleWidget
                    	    {
                    	     
                    	    	        newCompositeNode(grammarAccess.getLinkableWidgetAccess().getChildrenWidgetParserRuleCall_1_1_0()); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleWidget_in_ruleLinkableWidget1019);
                    	    lv_children_5_0=ruleWidget();

                    	    state._fsp--;


                    	    	        if (current==null) {
                    	    	            current = createModelElementForParent(grammarAccess.getLinkableWidgetRule());
                    	    	        }
                    	           		add(
                    	           			current, 
                    	           			"children",
                    	            		lv_children_5_0, 
                    	            		"Widget");
                    	    	        afterParserOrEnumRuleCall();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt7 >= 1 ) break loop7;
                                EarlyExitException eee =
                                    new EarlyExitException(7, input);
                                throw eee;
                        }
                        cnt7++;
                    } while (true);

                    otherlv_6=(Token)match(input,16,FOLLOW_16_in_ruleLinkableWidget1032); 

                        	newLeafNode(otherlv_6, grammarAccess.getLinkableWidgetAccess().getRightCurlyBracketKeyword_1_2());
                        

                    }
                    break;

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLinkableWidget"


    // $ANTLR start "entryRuleFrame"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:456:1: entryRuleFrame returns [EObject current=null] : iv_ruleFrame= ruleFrame EOF ;
    public final EObject entryRuleFrame() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFrame = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:457:2: (iv_ruleFrame= ruleFrame EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:458:2: iv_ruleFrame= ruleFrame EOF
            {
             newCompositeNode(grammarAccess.getFrameRule()); 
            pushFollow(FOLLOW_ruleFrame_in_entryRuleFrame1070);
            iv_ruleFrame=ruleFrame();

            state._fsp--;

             current =iv_ruleFrame; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFrame1080); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFrame"


    // $ANTLR start "ruleFrame"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:465:1: ruleFrame returns [EObject current=null] : ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleFrame() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_1=null;
        Token lv_label_6_2=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        AntlrDatatypeRuleToken lv_item_4_0 = null;

        AntlrDatatypeRuleToken lv_icon_8_0 = null;

        EObject lv_LabelColor_10_0 = null;

        EObject lv_LabelColor_12_0 = null;

        EObject lv_ValueColor_15_0 = null;

        EObject lv_ValueColor_17_0 = null;

        EObject lv_Visibility_20_0 = null;

        EObject lv_Visibility_22_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:468:28: ( ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:469:1: ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:469:1: ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:469:2: () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:469:2: ()
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:470:5: 
            {

                    current = forceCreateModelElement(
                        grammarAccess.getFrameAccess().getFrameAction_0(),
                        current);
                

            }

            otherlv_1=(Token)match(input,17,FOLLOW_17_in_ruleFrame1126); 

                	newLeafNode(otherlv_1, grammarAccess.getFrameAccess().getFrameKeyword_1());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:479:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:481:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:481:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:482:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:485:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:486:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:486:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            loop13:
            do {
                int alt13=7;
                int LA13_0 = input.LA(1);

                if ( LA13_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0) ) {
                    alt13=1;
                }
                else if ( LA13_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1) ) {
                    alt13=2;
                }
                else if ( LA13_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2) ) {
                    alt13=3;
                }
                else if ( LA13_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3) ) {
                    alt13=4;
                }
                else if ( LA13_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4) ) {
                    alt13=5;
                }
                else if ( LA13_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5) ) {
                    alt13=6;
                }


                switch (alt13) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:488:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:488:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:489:5: {...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:489:102: ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:490:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:493:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:493:7: {...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:493:16: (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:493:18: otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleFrame1184); 

            	        	newLeafNode(otherlv_3, grammarAccess.getFrameAccess().getItemKeyword_2_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:497:1: ( (lv_item_4_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:498:1: (lv_item_4_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:498:1: (lv_item_4_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:499:3: lv_item_4_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getItemItemRefParserRuleCall_2_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleFrame1205);
            	    lv_item_4_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_4_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:522:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:522:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:523:5: {...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:523:102: ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:524:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:527:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:527:7: {...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:527:16: (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:527:18: otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    {
            	    otherlv_5=(Token)match(input,13,FOLLOW_13_in_ruleFrame1273); 

            	        	newLeafNode(otherlv_5, grammarAccess.getFrameAccess().getLabelKeyword_2_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:531:1: ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:532:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:532:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:533:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:533:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    int alt9=2;
            	    int LA9_0 = input.LA(1);

            	    if ( (LA9_0==RULE_ID) ) {
            	        alt9=1;
            	    }
            	    else if ( (LA9_0==RULE_STRING) ) {
            	        alt9=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 9, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt9) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:534:3: lv_label_6_1= RULE_ID
            	            {
            	            lv_label_6_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFrame1292); 

            	            			newLeafNode(lv_label_6_1, grammarAccess.getFrameAccess().getLabelIDTerminalRuleCall_2_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getFrameRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:549:8: lv_label_6_2= RULE_STRING
            	            {
            	            lv_label_6_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleFrame1312); 

            	            			newLeafNode(lv_label_6_2, grammarAccess.getFrameAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getFrameRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:574:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:574:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:575:5: {...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:575:102: ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:576:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:579:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:579:7: {...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:579:16: (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:579:18: otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) )
            	    {
            	    otherlv_7=(Token)match(input,14,FOLLOW_14_in_ruleFrame1388); 

            	        	newLeafNode(otherlv_7, grammarAccess.getFrameAccess().getIconKeyword_2_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:583:1: ( (lv_icon_8_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:584:1: (lv_icon_8_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:584:1: (lv_icon_8_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:585:3: lv_icon_8_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getIconIconParserRuleCall_2_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleFrame1409);
            	    lv_icon_8_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_8_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:608:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:608:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:609:5: {...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:609:102: ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:610:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:613:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:613:7: {...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:613:16: (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:613:18: otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    {
            	    otherlv_9=(Token)match(input,19,FOLLOW_19_in_ruleFrame1477); 

            	        	newLeafNode(otherlv_9, grammarAccess.getFrameAccess().getLabelcolorKeyword_2_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:617:1: ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:617:2: ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:617:2: ( (lv_LabelColor_10_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:618:1: (lv_LabelColor_10_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:618:1: (lv_LabelColor_10_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:619:3: lv_LabelColor_10_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getLabelColorColorArrayParserRuleCall_2_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1499);
            	    lv_LabelColor_10_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_10_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:635:2: (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==20) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:635:4: otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_11=(Token)match(input,20,FOLLOW_20_in_ruleFrame1512); 

            	    	        	newLeafNode(otherlv_11, grammarAccess.getFrameAccess().getCommaKeyword_2_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:639:1: ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:640:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:640:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:641:3: lv_LabelColor_12_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getFrameAccess().getLabelColorColorArrayParserRuleCall_2_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1533);
            	    	    lv_LabelColor_12_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_12_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);

            	    otherlv_13=(Token)match(input,21,FOLLOW_21_in_ruleFrame1547); 

            	        	newLeafNode(otherlv_13, grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:668:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:668:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:669:5: {...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:669:102: ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:670:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:673:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:673:7: {...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:673:16: (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:673:18: otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,22,FOLLOW_22_in_ruleFrame1616); 

            	        	newLeafNode(otherlv_14, grammarAccess.getFrameAccess().getValuecolorKeyword_2_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:677:1: ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:677:2: ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:677:2: ( (lv_ValueColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:678:1: (lv_ValueColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:678:1: (lv_ValueColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:679:3: lv_ValueColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getValueColorColorArrayParserRuleCall_2_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1638);
            	    lv_ValueColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:695:2: (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )*
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==20) ) {
            	            alt11=1;
            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:695:4: otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleFrame1651); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getFrameAccess().getCommaKeyword_2_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:699:1: ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:700:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:700:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:701:3: lv_ValueColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getFrameAccess().getValueColorColorArrayParserRuleCall_2_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1672);
            	    	    lv_ValueColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop11;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleFrame1686); 

            	        	newLeafNode(otherlv_18, grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:728:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:728:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:729:5: {...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:729:102: ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:730:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:733:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:733:7: {...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:733:16: (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:733:18: otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,23,FOLLOW_23_in_ruleFrame1755); 

            	        	newLeafNode(otherlv_19, grammarAccess.getFrameAccess().getVisibilityKeyword_2_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:737:1: ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:737:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:737:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:738:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:738:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:739:3: lv_Visibility_20_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleFrame1777);
            	    lv_Visibility_20_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_20_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:755:2: (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )*
            	    loop12:
            	    do {
            	        int alt12=2;
            	        int LA12_0 = input.LA(1);

            	        if ( (LA12_0==20) ) {
            	            alt12=1;
            	        }


            	        switch (alt12) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:755:4: otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleFrame1790); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getFrameAccess().getCommaKeyword_2_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:759:1: ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:760:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:760:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:761:3: lv_Visibility_22_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getFrameAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleFrame1811);
            	    	    lv_Visibility_22_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_22_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop12;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleFrame1825); 

            	        	newLeafNode(otherlv_23, grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFrame"


    // $ANTLR start "entryRuleText"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:803:1: entryRuleText returns [EObject current=null] : iv_ruleText= ruleText EOF ;
    public final EObject entryRuleText() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleText = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:804:2: (iv_ruleText= ruleText EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:805:2: iv_ruleText= ruleText EOF
            {
             newCompositeNode(grammarAccess.getTextRule()); 
            pushFollow(FOLLOW_ruleText_in_entryRuleText1903);
            iv_ruleText=ruleText();

            state._fsp--;

             current =iv_ruleText; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleText1913); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleText"


    // $ANTLR start "ruleText"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:812:1: ruleText returns [EObject current=null] : ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleText() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_1=null;
        Token lv_label_6_2=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        AntlrDatatypeRuleToken lv_item_4_0 = null;

        AntlrDatatypeRuleToken lv_icon_8_0 = null;

        EObject lv_LabelColor_10_0 = null;

        EObject lv_LabelColor_12_0 = null;

        EObject lv_ValueColor_15_0 = null;

        EObject lv_ValueColor_17_0 = null;

        EObject lv_Visibility_20_0 = null;

        EObject lv_Visibility_22_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:815:28: ( ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:816:1: ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:816:1: ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:816:2: () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:816:2: ()
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:817:5: 
            {

                    current = forceCreateModelElement(
                        grammarAccess.getTextAccess().getTextAction_0(),
                        current);
                

            }

            otherlv_1=(Token)match(input,24,FOLLOW_24_in_ruleText1959); 

                	newLeafNode(otherlv_1, grammarAccess.getTextAccess().getTextKeyword_1());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:826:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:828:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:828:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:829:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:832:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:833:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:833:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            loop18:
            do {
                int alt18=7;
                int LA18_0 = input.LA(1);

                if ( LA18_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0) ) {
                    alt18=1;
                }
                else if ( LA18_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1) ) {
                    alt18=2;
                }
                else if ( LA18_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2) ) {
                    alt18=3;
                }
                else if ( LA18_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3) ) {
                    alt18=4;
                }
                else if ( LA18_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4) ) {
                    alt18=5;
                }
                else if ( LA18_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5) ) {
                    alt18=6;
                }


                switch (alt18) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:835:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:835:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:836:5: {...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:836:101: ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:837:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:840:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:840:7: {...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:840:16: (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:840:18: otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleText2017); 

            	        	newLeafNode(otherlv_3, grammarAccess.getTextAccess().getItemKeyword_2_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:844:1: ( (lv_item_4_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:845:1: (lv_item_4_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:845:1: (lv_item_4_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:846:3: lv_item_4_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getItemItemRefParserRuleCall_2_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleText2038);
            	    lv_item_4_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_4_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:869:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:869:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:870:5: {...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:870:101: ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:871:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:874:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:874:7: {...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:874:16: (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:874:18: otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    {
            	    otherlv_5=(Token)match(input,13,FOLLOW_13_in_ruleText2106); 

            	        	newLeafNode(otherlv_5, grammarAccess.getTextAccess().getLabelKeyword_2_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:878:1: ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:879:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:879:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:880:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:880:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    int alt14=2;
            	    int LA14_0 = input.LA(1);

            	    if ( (LA14_0==RULE_ID) ) {
            	        alt14=1;
            	    }
            	    else if ( (LA14_0==RULE_STRING) ) {
            	        alt14=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 14, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt14) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:881:3: lv_label_6_1= RULE_ID
            	            {
            	            lv_label_6_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleText2125); 

            	            			newLeafNode(lv_label_6_1, grammarAccess.getTextAccess().getLabelIDTerminalRuleCall_2_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getTextRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:896:8: lv_label_6_2= RULE_STRING
            	            {
            	            lv_label_6_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleText2145); 

            	            			newLeafNode(lv_label_6_2, grammarAccess.getTextAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getTextRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:921:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:921:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:922:5: {...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:922:101: ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:923:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:926:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:926:7: {...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:926:16: (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:926:18: otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) )
            	    {
            	    otherlv_7=(Token)match(input,14,FOLLOW_14_in_ruleText2221); 

            	        	newLeafNode(otherlv_7, grammarAccess.getTextAccess().getIconKeyword_2_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:930:1: ( (lv_icon_8_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:931:1: (lv_icon_8_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:931:1: (lv_icon_8_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:932:3: lv_icon_8_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getIconIconParserRuleCall_2_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleText2242);
            	    lv_icon_8_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_8_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:955:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:955:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:956:5: {...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:956:101: ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:957:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:960:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:960:7: {...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:960:16: (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:960:18: otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    {
            	    otherlv_9=(Token)match(input,19,FOLLOW_19_in_ruleText2310); 

            	        	newLeafNode(otherlv_9, grammarAccess.getTextAccess().getLabelcolorKeyword_2_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:964:1: ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:964:2: ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:964:2: ( (lv_LabelColor_10_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:965:1: (lv_LabelColor_10_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:965:1: (lv_LabelColor_10_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:966:3: lv_LabelColor_10_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getLabelColorColorArrayParserRuleCall_2_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2332);
            	    lv_LabelColor_10_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_10_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:982:2: (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )*
            	    loop15:
            	    do {
            	        int alt15=2;
            	        int LA15_0 = input.LA(1);

            	        if ( (LA15_0==20) ) {
            	            alt15=1;
            	        }


            	        switch (alt15) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:982:4: otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_11=(Token)match(input,20,FOLLOW_20_in_ruleText2345); 

            	    	        	newLeafNode(otherlv_11, grammarAccess.getTextAccess().getCommaKeyword_2_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:986:1: ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:987:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:987:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:988:3: lv_LabelColor_12_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getTextAccess().getLabelColorColorArrayParserRuleCall_2_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2366);
            	    	    lv_LabelColor_12_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_12_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop15;
            	        }
            	    } while (true);

            	    otherlv_13=(Token)match(input,21,FOLLOW_21_in_ruleText2380); 

            	        	newLeafNode(otherlv_13, grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1015:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1015:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1016:5: {...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1016:101: ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1017:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1020:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1020:7: {...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1020:16: (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1020:18: otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,22,FOLLOW_22_in_ruleText2449); 

            	        	newLeafNode(otherlv_14, grammarAccess.getTextAccess().getValuecolorKeyword_2_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1024:1: ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1024:2: ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1024:2: ( (lv_ValueColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1025:1: (lv_ValueColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1025:1: (lv_ValueColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1026:3: lv_ValueColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getValueColorColorArrayParserRuleCall_2_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2471);
            	    lv_ValueColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1042:2: (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )*
            	    loop16:
            	    do {
            	        int alt16=2;
            	        int LA16_0 = input.LA(1);

            	        if ( (LA16_0==20) ) {
            	            alt16=1;
            	        }


            	        switch (alt16) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1042:4: otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleText2484); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getTextAccess().getCommaKeyword_2_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1046:1: ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1047:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1047:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1048:3: lv_ValueColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getTextAccess().getValueColorColorArrayParserRuleCall_2_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2505);
            	    	    lv_ValueColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop16;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleText2519); 

            	        	newLeafNode(otherlv_18, grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1075:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1075:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1076:5: {...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1076:101: ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1077:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1080:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1080:7: {...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1080:16: (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1080:18: otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,23,FOLLOW_23_in_ruleText2588); 

            	        	newLeafNode(otherlv_19, grammarAccess.getTextAccess().getVisibilityKeyword_2_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1084:1: ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1084:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1084:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1085:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1085:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1086:3: lv_Visibility_20_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleText2610);
            	    lv_Visibility_20_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_20_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1102:2: (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )*
            	    loop17:
            	    do {
            	        int alt17=2;
            	        int LA17_0 = input.LA(1);

            	        if ( (LA17_0==20) ) {
            	            alt17=1;
            	        }


            	        switch (alt17) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1102:4: otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleText2623); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getTextAccess().getCommaKeyword_2_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1106:1: ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1107:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1107:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1108:3: lv_Visibility_22_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getTextAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleText2644);
            	    	    lv_Visibility_22_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_22_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop17;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleText2658); 

            	        	newLeafNode(otherlv_23, grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleText"


    // $ANTLR start "entryRuleGroup"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1150:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1151:2: (iv_ruleGroup= ruleGroup EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1152:2: iv_ruleGroup= ruleGroup EOF
            {
             newCompositeNode(grammarAccess.getGroupRule()); 
            pushFollow(FOLLOW_ruleGroup_in_entryRuleGroup2736);
            iv_ruleGroup=ruleGroup();

            state._fsp--;

             current =iv_ruleGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroup2746); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1159:1: ruleGroup returns [EObject current=null] : (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_9_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_ValueColor_14_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_Visibility_19_0 = null;

        EObject lv_Visibility_21_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1162:28: ( (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1163:1: (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1163:1: (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1163:3: otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,25,FOLLOW_25_in_ruleGroup2783); 

                	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1167:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1169:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1169:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1170:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1173:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1174:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1174:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+
            int cnt23=0;
            loop23:
            do {
                int alt23=7;
                int LA23_0 = input.LA(1);

                if ( LA23_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0) ) {
                    alt23=1;
                }
                else if ( LA23_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1) ) {
                    alt23=2;
                }
                else if ( LA23_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2) ) {
                    alt23=3;
                }
                else if ( LA23_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3) ) {
                    alt23=4;
                }
                else if ( LA23_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4) ) {
                    alt23=5;
                }
                else if ( LA23_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5) ) {
                    alt23=6;
                }


                switch (alt23) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1176:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1176:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1177:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1177:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1178:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1181:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1181:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1181:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1181:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleGroup2841); 

            	        	newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1185:1: ( (lv_item_3_0= ruleGroupItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1186:1: (lv_item_3_0= ruleGroupItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1186:1: (lv_item_3_0= ruleGroupItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1187:3: lv_item_3_0= ruleGroupItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getItemGroupItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleGroupItemRef_in_ruleGroup2862);
            	    lv_item_3_0=ruleGroupItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"GroupItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1210:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1210:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1211:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1211:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1212:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1215:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1215:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1215:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1215:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleGroup2930); 

            	        	newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1219:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1220:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1220:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1221:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1221:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt19=2;
            	    int LA19_0 = input.LA(1);

            	    if ( (LA19_0==RULE_ID) ) {
            	        alt19=1;
            	    }
            	    else if ( (LA19_0==RULE_STRING) ) {
            	        alt19=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 19, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt19) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1222:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleGroup2949); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getGroupAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getGroupRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1237:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleGroup2969); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getGroupAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getGroupRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1262:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1262:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1263:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1263:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1264:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1267:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1267:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1267:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1267:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleGroup3045); 

            	        	newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1271:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1272:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1272:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1273:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleGroup3066);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1296:4: ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1296:4: ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1297:5: {...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1297:102: ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1298:6: ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1301:6: ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1301:7: {...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1301:16: (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1301:18: otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' )
            	    {
            	    otherlv_8=(Token)match(input,19,FOLLOW_19_in_ruleGroup3134); 

            	        	newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getLabelcolorKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1305:1: ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1305:2: ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1305:2: ( (lv_LabelColor_9_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1306:1: (lv_LabelColor_9_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1306:1: (lv_LabelColor_9_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1307:3: lv_LabelColor_9_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getLabelColorColorArrayParserRuleCall_1_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3156);
            	    lv_LabelColor_9_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_9_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1323:2: (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )*
            	    loop20:
            	    do {
            	        int alt20=2;
            	        int LA20_0 = input.LA(1);

            	        if ( (LA20_0==20) ) {
            	            alt20=1;
            	        }


            	        switch (alt20) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1323:4: otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FOLLOW_20_in_ruleGroup3169); 

            	    	        	newLeafNode(otherlv_10, grammarAccess.getGroupAccess().getCommaKeyword_1_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1327:1: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1328:1: (lv_LabelColor_11_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1328:1: (lv_LabelColor_11_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1329:3: lv_LabelColor_11_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getGroupAccess().getLabelColorColorArrayParserRuleCall_1_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3190);
            	    	    lv_LabelColor_11_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_11_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop20;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleGroup3204); 

            	        	newLeafNode(otherlv_12, grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1356:4: ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1356:4: ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1357:5: {...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1357:102: ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1358:6: ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1361:6: ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1361:7: {...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1361:16: (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1361:18: otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    {
            	    otherlv_13=(Token)match(input,22,FOLLOW_22_in_ruleGroup3273); 

            	        	newLeafNode(otherlv_13, grammarAccess.getGroupAccess().getValuecolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1365:1: ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1365:2: ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1365:2: ( (lv_ValueColor_14_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1366:1: (lv_ValueColor_14_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1366:1: (lv_ValueColor_14_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1367:3: lv_ValueColor_14_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getValueColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3295);
            	    lv_ValueColor_14_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_14_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1383:2: (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )*
            	    loop21:
            	    do {
            	        int alt21=2;
            	        int LA21_0 = input.LA(1);

            	        if ( (LA21_0==20) ) {
            	            alt21=1;
            	        }


            	        switch (alt21) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1383:4: otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_15=(Token)match(input,20,FOLLOW_20_in_ruleGroup3308); 

            	    	        	newLeafNode(otherlv_15, grammarAccess.getGroupAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1387:1: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1388:1: (lv_ValueColor_16_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1388:1: (lv_ValueColor_16_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1389:3: lv_ValueColor_16_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getGroupAccess().getValueColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3329);
            	    	    lv_ValueColor_16_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_16_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop21;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,21,FOLLOW_21_in_ruleGroup3343); 

            	        	newLeafNode(otherlv_17, grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1416:4: ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1416:4: ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1417:5: {...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1417:102: ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1418:6: ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1421:6: ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1421:7: {...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1421:16: (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1421:18: otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' )
            	    {
            	    otherlv_18=(Token)match(input,23,FOLLOW_23_in_ruleGroup3412); 

            	        	newLeafNode(otherlv_18, grammarAccess.getGroupAccess().getVisibilityKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1425:1: ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1425:2: ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1425:2: ( (lv_Visibility_19_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1426:1: (lv_Visibility_19_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1426:1: (lv_Visibility_19_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1427:3: lv_Visibility_19_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleGroup3434);
            	    lv_Visibility_19_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_19_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1443:2: (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )*
            	    loop22:
            	    do {
            	        int alt22=2;
            	        int LA22_0 = input.LA(1);

            	        if ( (LA22_0==20) ) {
            	            alt22=1;
            	        }


            	        switch (alt22) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1443:4: otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_20=(Token)match(input,20,FOLLOW_20_in_ruleGroup3447); 

            	    	        	newLeafNode(otherlv_20, grammarAccess.getGroupAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1447:1: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1448:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1448:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1449:3: lv_Visibility_21_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getGroupAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleGroup3468);
            	    	    lv_Visibility_21_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_21_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop22;
            	        }
            	    } while (true);

            	    otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleGroup3482); 

            	        	newLeafNode(otherlv_22, grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt23 >= 1 ) break loop23;
                        EarlyExitException eee =
                            new EarlyExitException(23, input);
                        throw eee;
                }
                cnt23++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getGroupAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getGroupAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleImage"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1492:1: entryRuleImage returns [EObject current=null] : iv_ruleImage= ruleImage EOF ;
    public final EObject entryRuleImage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImage = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1493:2: (iv_ruleImage= ruleImage EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1494:2: iv_ruleImage= ruleImage EOF
            {
             newCompositeNode(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_ruleImage_in_entryRuleImage3566);
            iv_ruleImage=ruleImage();

            state._fsp--;

             current =iv_ruleImage; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleImage3576); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1501:1: ruleImage returns [EObject current=null] : (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleImage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_url_9_0=null;
        Token otherlv_10=null;
        Token lv_refresh_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_IconColor_23_0 = null;

        EObject lv_IconColor_25_0 = null;

        EObject lv_Visibility_28_0 = null;

        EObject lv_Visibility_30_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1504:28: ( (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1505:1: (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1505:1: (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1505:3: otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleImage3613); 

                	newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1509:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1511:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1511:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1512:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1515:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1516:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1516:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+
            int cnt29=0;
            loop29:
            do {
                int alt29=10;
                alt29 = dfa29.predict(input);
                switch (alt29) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1518:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1518:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1519:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1519:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1520:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1523:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1523:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1523:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1523:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleImage3671); 

            	        	newLeafNode(otherlv_2, grammarAccess.getImageAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1527:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1528:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1528:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1529:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleImage3692);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1552:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1552:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1553:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1553:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1554:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1557:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1557:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1557:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1557:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleImage3760); 

            	        	newLeafNode(otherlv_4, grammarAccess.getImageAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1561:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1562:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1562:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1563:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1563:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt24=2;
            	    int LA24_0 = input.LA(1);

            	    if ( (LA24_0==RULE_ID) ) {
            	        alt24=1;
            	    }
            	    else if ( (LA24_0==RULE_STRING) ) {
            	        alt24=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 24, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt24) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1564:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleImage3779); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getImageAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getImageRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1579:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleImage3799); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getImageAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getImageRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1604:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1604:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1605:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1605:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1606:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1609:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1609:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1609:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1609:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleImage3875); 

            	        	newLeafNode(otherlv_6, grammarAccess.getImageAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1613:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1614:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1614:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1615:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleImage3896);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1638:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1638:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1639:5: {...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1639:102: ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1640:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1643:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1643:7: {...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1643:16: (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1643:18: otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleImage3964); 

            	        	newLeafNode(otherlv_8, grammarAccess.getImageAccess().getUrlKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1647:1: ( (lv_url_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1648:1: (lv_url_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1648:1: (lv_url_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1649:3: lv_url_9_0= RULE_STRING
            	    {
            	    lv_url_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleImage3981); 

            	    			newLeafNode(lv_url_9_0, grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getImageRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"url",
            	            		lv_url_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1672:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1672:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1673:5: {...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1673:102: ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1674:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1677:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1677:7: {...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1677:16: (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1677:18: otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) )
            	    {
            	    otherlv_10=(Token)match(input,28,FOLLOW_28_in_ruleImage4054); 

            	        	newLeafNode(otherlv_10, grammarAccess.getImageAccess().getRefreshKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1681:1: ( (lv_refresh_11_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1682:1: (lv_refresh_11_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1682:1: (lv_refresh_11_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1683:3: lv_refresh_11_0= RULE_INT
            	    {
            	    lv_refresh_11_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleImage4071); 

            	    			newLeafNode(lv_refresh_11_0, grammarAccess.getImageAccess().getRefreshINTTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getImageRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"refresh",
            	            		lv_refresh_11_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1706:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1706:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1707:5: {...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1707:102: ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1708:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1711:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1711:7: {...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1711:16: (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1711:18: otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    {
            	    otherlv_12=(Token)match(input,19,FOLLOW_19_in_ruleImage4144); 

            	        	newLeafNode(otherlv_12, grammarAccess.getImageAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1715:1: ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1715:2: ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1715:2: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1716:1: (lv_LabelColor_13_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1716:1: (lv_LabelColor_13_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1717:3: lv_LabelColor_13_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4166);
            	    lv_LabelColor_13_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_13_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1733:2: (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )*
            	    loop25:
            	    do {
            	        int alt25=2;
            	        int LA25_0 = input.LA(1);

            	        if ( (LA25_0==20) ) {
            	            alt25=1;
            	        }


            	        switch (alt25) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1733:4: otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,20,FOLLOW_20_in_ruleImage4179); 

            	    	        	newLeafNode(otherlv_14, grammarAccess.getImageAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1737:1: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1738:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1738:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1739:3: lv_LabelColor_15_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4200);
            	    	    lv_LabelColor_15_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_15_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop25;
            	        }
            	    } while (true);

            	    otherlv_16=(Token)match(input,21,FOLLOW_21_in_ruleImage4214); 

            	        	newLeafNode(otherlv_16, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1766:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1766:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1767:5: {...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1767:102: ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1768:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1771:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1771:7: {...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1771:16: (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1771:18: otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    {
            	    otherlv_17=(Token)match(input,22,FOLLOW_22_in_ruleImage4283); 

            	        	newLeafNode(otherlv_17, grammarAccess.getImageAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1775:1: ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1775:2: ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1775:2: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1776:1: (lv_ValueColor_18_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1776:1: (lv_ValueColor_18_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1777:3: lv_ValueColor_18_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4305);
            	    lv_ValueColor_18_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_18_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1793:2: (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )*
            	    loop26:
            	    do {
            	        int alt26=2;
            	        int LA26_0 = input.LA(1);

            	        if ( (LA26_0==20) ) {
            	            alt26=1;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1793:4: otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_19=(Token)match(input,20,FOLLOW_20_in_ruleImage4318); 

            	    	        	newLeafNode(otherlv_19, grammarAccess.getImageAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1797:1: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1798:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1798:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1799:3: lv_ValueColor_20_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4339);
            	    	    lv_ValueColor_20_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_20_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);

            	    otherlv_21=(Token)match(input,21,FOLLOW_21_in_ruleImage4353); 

            	        	newLeafNode(otherlv_21, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1826:4: ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1826:4: ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1827:5: {...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1827:102: ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1828:6: ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1831:6: ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1831:7: {...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1831:16: (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1831:18: otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' )
            	    {
            	    otherlv_22=(Token)match(input,29,FOLLOW_29_in_ruleImage4422); 

            	        	newLeafNode(otherlv_22, grammarAccess.getImageAccess().getIconcolorKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1835:1: ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1835:2: ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1835:2: ( (lv_IconColor_23_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1836:1: (lv_IconColor_23_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1836:1: (lv_IconColor_23_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1837:3: lv_IconColor_23_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getIconColorColorArrayParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4444);
            	    lv_IconColor_23_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"IconColor",
            	            		lv_IconColor_23_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1853:2: (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )*
            	    loop27:
            	    do {
            	        int alt27=2;
            	        int LA27_0 = input.LA(1);

            	        if ( (LA27_0==20) ) {
            	            alt27=1;
            	        }


            	        switch (alt27) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1853:4: otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_24=(Token)match(input,20,FOLLOW_20_in_ruleImage4457); 

            	    	        	newLeafNode(otherlv_24, grammarAccess.getImageAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1857:1: ( (lv_IconColor_25_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1858:1: (lv_IconColor_25_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1858:1: (lv_IconColor_25_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1859:3: lv_IconColor_25_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getIconColorColorArrayParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4478);
            	    	    lv_IconColor_25_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"IconColor",
            	    	            		lv_IconColor_25_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop27;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,21,FOLLOW_21_in_ruleImage4492); 

            	        	newLeafNode(otherlv_26, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1886:4: ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1886:4: ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1887:5: {...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1887:102: ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1888:6: ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1891:6: ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1891:7: {...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1891:16: (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1891:18: otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' )
            	    {
            	    otherlv_27=(Token)match(input,23,FOLLOW_23_in_ruleImage4561); 

            	        	newLeafNode(otherlv_27, grammarAccess.getImageAccess().getVisibilityKeyword_1_8_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1895:1: ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1895:2: ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1895:2: ( (lv_Visibility_28_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1896:1: (lv_Visibility_28_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1896:1: (lv_Visibility_28_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1897:3: lv_Visibility_28_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleImage4583);
            	    lv_Visibility_28_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_28_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1913:2: (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )*
            	    loop28:
            	    do {
            	        int alt28=2;
            	        int LA28_0 = input.LA(1);

            	        if ( (LA28_0==20) ) {
            	            alt28=1;
            	        }


            	        switch (alt28) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1913:4: otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_29=(Token)match(input,20,FOLLOW_20_in_ruleImage4596); 

            	    	        	newLeafNode(otherlv_29, grammarAccess.getImageAccess().getCommaKeyword_1_8_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1917:1: ( (lv_Visibility_30_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1918:1: (lv_Visibility_30_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1918:1: (lv_Visibility_30_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1919:3: lv_Visibility_30_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleImage4617);
            	    	    lv_Visibility_30_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_30_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop28;
            	        }
            	    } while (true);

            	    otherlv_31=(Token)match(input,21,FOLLOW_21_in_ruleImage4631); 

            	        	newLeafNode(otherlv_31, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_8_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt29 >= 1 ) break loop29;
                        EarlyExitException eee =
                            new EarlyExitException(29, input);
                        throw eee;
                }
                cnt29++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getImageAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canLeave(grammarAccess.getImageAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleVideo"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1962:1: entryRuleVideo returns [EObject current=null] : iv_ruleVideo= ruleVideo EOF ;
    public final EObject entryRuleVideo() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVideo = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1963:2: (iv_ruleVideo= ruleVideo EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1964:2: iv_ruleVideo= ruleVideo EOF
            {
             newCompositeNode(grammarAccess.getVideoRule()); 
            pushFollow(FOLLOW_ruleVideo_in_entryRuleVideo4715);
            iv_ruleVideo=ruleVideo();

            state._fsp--;

             current =iv_ruleVideo; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVideo4725); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVideo"


    // $ANTLR start "ruleVideo"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1971:1: ruleVideo returns [EObject current=null] : (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleVideo() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_url_9_0=null;
        Token otherlv_10=null;
        Token lv_encoding_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_Visibility_23_0 = null;

        EObject lv_Visibility_25_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1974:28: ( (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1975:1: (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1975:1: (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1975:3: otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,30,FOLLOW_30_in_ruleVideo4762); 

                	newLeafNode(otherlv_0, grammarAccess.getVideoAccess().getVideoKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1979:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1981:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1981:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1982:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1985:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1986:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1986:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+
            int cnt34=0;
            loop34:
            do {
                int alt34=9;
                alt34 = dfa34.predict(input);
                switch (alt34) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1988:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1988:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1989:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1989:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1990:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1993:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1993:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1993:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1993:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleVideo4820); 

            	        	newLeafNode(otherlv_2, grammarAccess.getVideoAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1997:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1998:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1998:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1999:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleVideo4841);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2022:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2022:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2023:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2023:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2024:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2027:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2027:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2027:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2027:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleVideo4909); 

            	        	newLeafNode(otherlv_4, grammarAccess.getVideoAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2031:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2032:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2032:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2033:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2033:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==RULE_ID) ) {
            	        alt30=1;
            	    }
            	    else if ( (LA30_0==RULE_STRING) ) {
            	        alt30=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 30, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2034:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVideo4928); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getVideoAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getVideoRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2049:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVideo4948); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getVideoAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getVideoRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2074:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2074:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2075:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2075:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2076:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2079:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2079:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2079:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2079:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleVideo5024); 

            	        	newLeafNode(otherlv_6, grammarAccess.getVideoAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2083:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2084:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2084:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2085:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleVideo5045);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2108:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2108:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2109:5: {...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2109:102: ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2110:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2113:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2113:7: {...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2113:16: (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2113:18: otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleVideo5113); 

            	        	newLeafNode(otherlv_8, grammarAccess.getVideoAccess().getUrlKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2117:1: ( (lv_url_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2118:1: (lv_url_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2118:1: (lv_url_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2119:3: lv_url_9_0= RULE_STRING
            	    {
            	    lv_url_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVideo5130); 

            	    			newLeafNode(lv_url_9_0, grammarAccess.getVideoAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getVideoRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"url",
            	            		lv_url_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2142:4: ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2142:4: ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2143:5: {...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2143:102: ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2144:6: ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2147:6: ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2147:7: {...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2147:16: (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2147:18: otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) )
            	    {
            	    otherlv_10=(Token)match(input,31,FOLLOW_31_in_ruleVideo5203); 

            	        	newLeafNode(otherlv_10, grammarAccess.getVideoAccess().getEncodingKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2151:1: ( (lv_encoding_11_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2152:1: (lv_encoding_11_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2152:1: (lv_encoding_11_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2153:3: lv_encoding_11_0= RULE_STRING
            	    {
            	    lv_encoding_11_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVideo5220); 

            	    			newLeafNode(lv_encoding_11_0, grammarAccess.getVideoAccess().getEncodingSTRINGTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getVideoRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"encoding",
            	            		lv_encoding_11_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2176:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2176:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2177:5: {...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2177:102: ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2178:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2181:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2181:7: {...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2181:16: (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2181:18: otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    {
            	    otherlv_12=(Token)match(input,19,FOLLOW_19_in_ruleVideo5293); 

            	        	newLeafNode(otherlv_12, grammarAccess.getVideoAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2185:1: ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2185:2: ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2185:2: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2186:1: (lv_LabelColor_13_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2186:1: (lv_LabelColor_13_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2187:3: lv_LabelColor_13_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5315);
            	    lv_LabelColor_13_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_13_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2203:2: (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )*
            	    loop31:
            	    do {
            	        int alt31=2;
            	        int LA31_0 = input.LA(1);

            	        if ( (LA31_0==20) ) {
            	            alt31=1;
            	        }


            	        switch (alt31) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2203:4: otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,20,FOLLOW_20_in_ruleVideo5328); 

            	    	        	newLeafNode(otherlv_14, grammarAccess.getVideoAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2207:1: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2208:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2208:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2209:3: lv_LabelColor_15_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getVideoAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5349);
            	    	    lv_LabelColor_15_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_15_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop31;
            	        }
            	    } while (true);

            	    otherlv_16=(Token)match(input,21,FOLLOW_21_in_ruleVideo5363); 

            	        	newLeafNode(otherlv_16, grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2236:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2236:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2237:5: {...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2237:102: ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2238:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2241:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2241:7: {...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2241:16: (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2241:18: otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    {
            	    otherlv_17=(Token)match(input,22,FOLLOW_22_in_ruleVideo5432); 

            	        	newLeafNode(otherlv_17, grammarAccess.getVideoAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2245:1: ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2245:2: ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2245:2: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2246:1: (lv_ValueColor_18_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2246:1: (lv_ValueColor_18_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2247:3: lv_ValueColor_18_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5454);
            	    lv_ValueColor_18_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_18_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2263:2: (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )*
            	    loop32:
            	    do {
            	        int alt32=2;
            	        int LA32_0 = input.LA(1);

            	        if ( (LA32_0==20) ) {
            	            alt32=1;
            	        }


            	        switch (alt32) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2263:4: otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_19=(Token)match(input,20,FOLLOW_20_in_ruleVideo5467); 

            	    	        	newLeafNode(otherlv_19, grammarAccess.getVideoAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2267:1: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2268:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2268:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2269:3: lv_ValueColor_20_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getVideoAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5488);
            	    	    lv_ValueColor_20_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_20_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop32;
            	        }
            	    } while (true);

            	    otherlv_21=(Token)match(input,21,FOLLOW_21_in_ruleVideo5502); 

            	        	newLeafNode(otherlv_21, grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2296:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2296:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2297:5: {...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2297:102: ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2298:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2301:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2301:7: {...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2301:16: (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2301:18: otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    {
            	    otherlv_22=(Token)match(input,23,FOLLOW_23_in_ruleVideo5571); 

            	        	newLeafNode(otherlv_22, grammarAccess.getVideoAccess().getVisibilityKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2305:1: ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2305:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2305:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2306:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2306:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2307:3: lv_Visibility_23_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleVideo5593);
            	    lv_Visibility_23_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_23_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2323:2: (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )*
            	    loop33:
            	    do {
            	        int alt33=2;
            	        int LA33_0 = input.LA(1);

            	        if ( (LA33_0==20) ) {
            	            alt33=1;
            	        }


            	        switch (alt33) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2323:4: otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_24=(Token)match(input,20,FOLLOW_20_in_ruleVideo5606); 

            	    	        	newLeafNode(otherlv_24, grammarAccess.getVideoAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2327:1: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2328:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2328:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2329:3: lv_Visibility_25_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getVideoAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleVideo5627);
            	    	    lv_Visibility_25_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_25_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop33;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,21,FOLLOW_21_in_ruleVideo5641); 

            	        	newLeafNode(otherlv_26, grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVideoAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canLeave(grammarAccess.getVideoAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVideo"


    // $ANTLR start "entryRuleChart"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2372:1: entryRuleChart returns [EObject current=null] : iv_ruleChart= ruleChart EOF ;
    public final EObject entryRuleChart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChart = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2373:2: (iv_ruleChart= ruleChart EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2374:2: iv_ruleChart= ruleChart EOF
            {
             newCompositeNode(grammarAccess.getChartRule()); 
            pushFollow(FOLLOW_ruleChart_in_entryRuleChart5725);
            iv_ruleChart=ruleChart();

            state._fsp--;

             current =iv_ruleChart; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChart5735); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChart"


    // $ANTLR start "ruleChart"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2381:1: ruleChart returns [EObject current=null] : (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleChart() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_service_9_0=null;
        Token otherlv_10=null;
        Token lv_refresh_11_0=null;
        Token otherlv_12=null;
        Token lv_period_13_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_LabelColor_17_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_ValueColor_22_0 = null;

        EObject lv_Visibility_25_0 = null;

        EObject lv_Visibility_27_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2384:28: ( (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2385:1: (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2385:1: (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2385:3: otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,32,FOLLOW_32_in_ruleChart5772); 

                	newLeafNode(otherlv_0, grammarAccess.getChartAccess().getChartKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2389:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2391:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2391:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2392:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2395:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2396:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2396:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+
            int cnt39=0;
            loop39:
            do {
                int alt39=10;
                alt39 = dfa39.predict(input);
                switch (alt39) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2398:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2398:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2399:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2399:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2400:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2403:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2403:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2403:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2403:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleChart5830); 

            	        	newLeafNode(otherlv_2, grammarAccess.getChartAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2407:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2408:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2408:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2409:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleChart5851);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2432:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2432:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2433:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2433:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2434:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2437:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2437:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2437:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2437:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleChart5919); 

            	        	newLeafNode(otherlv_4, grammarAccess.getChartAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2441:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2442:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2442:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2443:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2443:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt35=2;
            	    int LA35_0 = input.LA(1);

            	    if ( (LA35_0==RULE_ID) ) {
            	        alt35=1;
            	    }
            	    else if ( (LA35_0==RULE_STRING) ) {
            	        alt35=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 35, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt35) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2444:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleChart5938); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getChartAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getChartRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2459:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleChart5958); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getChartAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getChartRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2484:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2484:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2485:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2485:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2486:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2489:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2489:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2489:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2489:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleChart6034); 

            	        	newLeafNode(otherlv_6, grammarAccess.getChartAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2493:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2494:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2494:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2495:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleChart6055);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2518:4: ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2518:4: ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2519:5: {...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2519:102: ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2520:6: ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2523:6: ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2523:7: {...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2523:16: (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2523:18: otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,33,FOLLOW_33_in_ruleChart6123); 

            	        	newLeafNode(otherlv_8, grammarAccess.getChartAccess().getServiceKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2527:1: ( (lv_service_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2528:1: (lv_service_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2528:1: (lv_service_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2529:3: lv_service_9_0= RULE_STRING
            	    {
            	    lv_service_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleChart6140); 

            	    			newLeafNode(lv_service_9_0, grammarAccess.getChartAccess().getServiceSTRINGTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getChartRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"service",
            	            		lv_service_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2552:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2552:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2553:5: {...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2553:102: ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2554:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2557:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2557:7: {...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2557:16: (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2557:18: otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) )
            	    {
            	    otherlv_10=(Token)match(input,28,FOLLOW_28_in_ruleChart6213); 

            	        	newLeafNode(otherlv_10, grammarAccess.getChartAccess().getRefreshKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2561:1: ( (lv_refresh_11_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2562:1: (lv_refresh_11_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2562:1: (lv_refresh_11_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2563:3: lv_refresh_11_0= RULE_INT
            	    {
            	    lv_refresh_11_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleChart6230); 

            	    			newLeafNode(lv_refresh_11_0, grammarAccess.getChartAccess().getRefreshINTTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getChartRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"refresh",
            	            		lv_refresh_11_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2586:4: ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2586:4: ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2587:5: {...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2587:102: ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2588:6: ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2591:6: ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2591:7: {...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2591:16: (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2591:18: otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,34,FOLLOW_34_in_ruleChart6303); 

            	        	newLeafNode(otherlv_12, grammarAccess.getChartAccess().getPeriodKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2595:1: ( (lv_period_13_0= RULE_ID ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2596:1: (lv_period_13_0= RULE_ID )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2596:1: (lv_period_13_0= RULE_ID )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2597:3: lv_period_13_0= RULE_ID
            	    {
            	    lv_period_13_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleChart6320); 

            	    			newLeafNode(lv_period_13_0, grammarAccess.getChartAccess().getPeriodIDTerminalRuleCall_1_5_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getChartRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"period",
            	            		lv_period_13_0, 
            	            		"ID");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2620:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2620:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2621:5: {...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2621:102: ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2622:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2625:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2625:7: {...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2625:16: (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2625:18: otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,19,FOLLOW_19_in_ruleChart6393); 

            	        	newLeafNode(otherlv_14, grammarAccess.getChartAccess().getLabelcolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2629:1: ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2629:2: ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2629:2: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2630:1: (lv_LabelColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2630:1: (lv_LabelColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2631:3: lv_LabelColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getLabelColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6415);
            	    lv_LabelColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2647:2: (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )*
            	    loop36:
            	    do {
            	        int alt36=2;
            	        int LA36_0 = input.LA(1);

            	        if ( (LA36_0==20) ) {
            	            alt36=1;
            	        }


            	        switch (alt36) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2647:4: otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleChart6428); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getChartAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2651:1: ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2652:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2652:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2653:3: lv_LabelColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getChartAccess().getLabelColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6449);
            	    	    lv_LabelColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop36;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleChart6463); 

            	        	newLeafNode(otherlv_18, grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2680:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2680:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2681:5: {...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2681:102: ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2682:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2685:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2685:7: {...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2685:16: (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2685:18: otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,22,FOLLOW_22_in_ruleChart6532); 

            	        	newLeafNode(otherlv_19, grammarAccess.getChartAccess().getValuecolorKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2689:1: ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2689:2: ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2689:2: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2690:1: (lv_ValueColor_20_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2690:1: (lv_ValueColor_20_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2691:3: lv_ValueColor_20_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getValueColorColorArrayParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6554);
            	    lv_ValueColor_20_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_20_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2707:2: (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )*
            	    loop37:
            	    do {
            	        int alt37=2;
            	        int LA37_0 = input.LA(1);

            	        if ( (LA37_0==20) ) {
            	            alt37=1;
            	        }


            	        switch (alt37) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2707:4: otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleChart6567); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getChartAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2711:1: ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2712:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2712:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2713:3: lv_ValueColor_22_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getChartAccess().getValueColorColorArrayParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6588);
            	    	    lv_ValueColor_22_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_22_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop37;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleChart6602); 

            	        	newLeafNode(otherlv_23, grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2740:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2740:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2741:5: {...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2741:102: ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2742:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2745:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2745:7: {...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2745:16: (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2745:18: otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    {
            	    otherlv_24=(Token)match(input,23,FOLLOW_23_in_ruleChart6671); 

            	        	newLeafNode(otherlv_24, grammarAccess.getChartAccess().getVisibilityKeyword_1_8_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2749:1: ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2749:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2749:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2750:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2750:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2751:3: lv_Visibility_25_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleChart6693);
            	    lv_Visibility_25_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_25_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2767:2: (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )*
            	    loop38:
            	    do {
            	        int alt38=2;
            	        int LA38_0 = input.LA(1);

            	        if ( (LA38_0==20) ) {
            	            alt38=1;
            	        }


            	        switch (alt38) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2767:4: otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_26=(Token)match(input,20,FOLLOW_20_in_ruleChart6706); 

            	    	        	newLeafNode(otherlv_26, grammarAccess.getChartAccess().getCommaKeyword_1_8_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2771:1: ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2772:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2772:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2773:3: lv_Visibility_27_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getChartAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleChart6727);
            	    	    lv_Visibility_27_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_27_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop38;
            	        }
            	    } while (true);

            	    otherlv_28=(Token)match(input,21,FOLLOW_21_in_ruleChart6741); 

            	        	newLeafNode(otherlv_28, grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_8_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt39 >= 1 ) break loop39;
                        EarlyExitException eee =
                            new EarlyExitException(39, input);
                        throw eee;
                }
                cnt39++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getChartAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canLeave(grammarAccess.getChartAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChart"


    // $ANTLR start "entryRuleWebview"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2816:1: entryRuleWebview returns [EObject current=null] : iv_ruleWebview= ruleWebview EOF ;
    public final EObject entryRuleWebview() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWebview = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2817:2: (iv_ruleWebview= ruleWebview EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2818:2: iv_ruleWebview= ruleWebview EOF
            {
             newCompositeNode(grammarAccess.getWebviewRule()); 
            pushFollow(FOLLOW_ruleWebview_in_entryRuleWebview6825);
            iv_ruleWebview=ruleWebview();

            state._fsp--;

             current =iv_ruleWebview; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWebview6835); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWebview"


    // $ANTLR start "ruleWebview"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2825:1: ruleWebview returns [EObject current=null] : (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleWebview() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_height_9_0=null;
        Token otherlv_10=null;
        Token lv_url_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_Visibility_23_0 = null;

        EObject lv_Visibility_25_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2828:28: ( (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2829:1: (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2829:1: (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2829:3: otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,35,FOLLOW_35_in_ruleWebview6872); 

                	newLeafNode(otherlv_0, grammarAccess.getWebviewAccess().getWebviewKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2833:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2835:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2835:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2836:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2839:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2840:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2840:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+
            int cnt44=0;
            loop44:
            do {
                int alt44=9;
                alt44 = dfa44.predict(input);
                switch (alt44) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2842:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2842:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2843:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2843:104: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2844:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2847:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2847:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2847:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2847:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleWebview6930); 

            	        	newLeafNode(otherlv_2, grammarAccess.getWebviewAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2851:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2852:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2852:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2853:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleWebview6951);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2876:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2876:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2877:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2877:104: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2878:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2881:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2881:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2881:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2881:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleWebview7019); 

            	        	newLeafNode(otherlv_4, grammarAccess.getWebviewAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2885:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2886:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2886:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2887:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2887:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt40=2;
            	    int LA40_0 = input.LA(1);

            	    if ( (LA40_0==RULE_ID) ) {
            	        alt40=1;
            	    }
            	    else if ( (LA40_0==RULE_STRING) ) {
            	        alt40=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt40) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2888:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWebview7038); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getWebviewAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getWebviewRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2903:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleWebview7058); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getWebviewAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getWebviewRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2928:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2928:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2929:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2929:104: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2930:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2933:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2933:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2933:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2933:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleWebview7134); 

            	        	newLeafNode(otherlv_6, grammarAccess.getWebviewAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2937:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2938:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2938:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2939:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleWebview7155);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2962:4: ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2962:4: ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2963:5: {...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2963:104: ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2964:6: ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2967:6: ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2967:7: {...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2967:16: (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2967:18: otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,36,FOLLOW_36_in_ruleWebview7223); 

            	        	newLeafNode(otherlv_8, grammarAccess.getWebviewAccess().getHeightKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2971:1: ( (lv_height_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2972:1: (lv_height_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2972:1: (lv_height_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2973:3: lv_height_9_0= RULE_INT
            	    {
            	    lv_height_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleWebview7240); 

            	    			newLeafNode(lv_height_9_0, grammarAccess.getWebviewAccess().getHeightINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getWebviewRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"height",
            	            		lv_height_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2996:4: ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2996:4: ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2997:5: {...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2997:104: ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2998:6: ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3001:6: ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3001:7: {...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3001:16: (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3001:18: otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) )
            	    {
            	    otherlv_10=(Token)match(input,27,FOLLOW_27_in_ruleWebview7313); 

            	        	newLeafNode(otherlv_10, grammarAccess.getWebviewAccess().getUrlKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3005:1: ( (lv_url_11_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3006:1: (lv_url_11_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3006:1: (lv_url_11_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3007:3: lv_url_11_0= RULE_STRING
            	    {
            	    lv_url_11_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleWebview7330); 

            	    			newLeafNode(lv_url_11_0, grammarAccess.getWebviewAccess().getUrlSTRINGTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getWebviewRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"url",
            	            		lv_url_11_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3030:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3030:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3031:5: {...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3031:104: ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3032:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3035:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3035:7: {...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3035:16: (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3035:18: otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    {
            	    otherlv_12=(Token)match(input,19,FOLLOW_19_in_ruleWebview7403); 

            	        	newLeafNode(otherlv_12, grammarAccess.getWebviewAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3039:1: ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3039:2: ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3039:2: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3040:1: (lv_LabelColor_13_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3040:1: (lv_LabelColor_13_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3041:3: lv_LabelColor_13_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7425);
            	    lv_LabelColor_13_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_13_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3057:2: (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )*
            	    loop41:
            	    do {
            	        int alt41=2;
            	        int LA41_0 = input.LA(1);

            	        if ( (LA41_0==20) ) {
            	            alt41=1;
            	        }


            	        switch (alt41) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3057:4: otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,20,FOLLOW_20_in_ruleWebview7438); 

            	    	        	newLeafNode(otherlv_14, grammarAccess.getWebviewAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3061:1: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3062:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3062:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3063:3: lv_LabelColor_15_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getWebviewAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7459);
            	    	    lv_LabelColor_15_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_15_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop41;
            	        }
            	    } while (true);

            	    otherlv_16=(Token)match(input,21,FOLLOW_21_in_ruleWebview7473); 

            	        	newLeafNode(otherlv_16, grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3090:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3090:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3091:5: {...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3091:104: ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3092:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3095:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3095:7: {...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3095:16: (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3095:18: otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    {
            	    otherlv_17=(Token)match(input,22,FOLLOW_22_in_ruleWebview7542); 

            	        	newLeafNode(otherlv_17, grammarAccess.getWebviewAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3099:1: ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3099:2: ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3099:2: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3100:1: (lv_ValueColor_18_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3100:1: (lv_ValueColor_18_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3101:3: lv_ValueColor_18_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7564);
            	    lv_ValueColor_18_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_18_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3117:2: (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )*
            	    loop42:
            	    do {
            	        int alt42=2;
            	        int LA42_0 = input.LA(1);

            	        if ( (LA42_0==20) ) {
            	            alt42=1;
            	        }


            	        switch (alt42) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3117:4: otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_19=(Token)match(input,20,FOLLOW_20_in_ruleWebview7577); 

            	    	        	newLeafNode(otherlv_19, grammarAccess.getWebviewAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3121:1: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3122:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3122:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3123:3: lv_ValueColor_20_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getWebviewAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7598);
            	    	    lv_ValueColor_20_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_20_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop42;
            	        }
            	    } while (true);

            	    otherlv_21=(Token)match(input,21,FOLLOW_21_in_ruleWebview7612); 

            	        	newLeafNode(otherlv_21, grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3150:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3150:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3151:5: {...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3151:104: ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3152:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3155:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3155:7: {...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3155:16: (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3155:18: otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    {
            	    otherlv_22=(Token)match(input,23,FOLLOW_23_in_ruleWebview7681); 

            	        	newLeafNode(otherlv_22, grammarAccess.getWebviewAccess().getVisibilityKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3159:1: ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3159:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3159:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3160:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3160:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3161:3: lv_Visibility_23_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleWebview7703);
            	    lv_Visibility_23_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_23_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3177:2: (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )*
            	    loop43:
            	    do {
            	        int alt43=2;
            	        int LA43_0 = input.LA(1);

            	        if ( (LA43_0==20) ) {
            	            alt43=1;
            	        }


            	        switch (alt43) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3177:4: otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_24=(Token)match(input,20,FOLLOW_20_in_ruleWebview7716); 

            	    	        	newLeafNode(otherlv_24, grammarAccess.getWebviewAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3181:1: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3182:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3182:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3183:3: lv_Visibility_25_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getWebviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleWebview7737);
            	    	    lv_Visibility_25_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_25_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop43;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,21,FOLLOW_21_in_ruleWebview7751); 

            	        	newLeafNode(otherlv_26, grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt44 >= 1 ) break loop44;
                        EarlyExitException eee =
                            new EarlyExitException(44, input);
                        throw eee;
                }
                cnt44++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getWebviewAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canLeave(grammarAccess.getWebviewAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWebview"


    // $ANTLR start "entryRuleMapview"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3226:1: entryRuleMapview returns [EObject current=null] : iv_ruleMapview= ruleMapview EOF ;
    public final EObject entryRuleMapview() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapview = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3227:2: (iv_ruleMapview= ruleMapview EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3228:2: iv_ruleMapview= ruleMapview EOF
            {
             newCompositeNode(grammarAccess.getMapviewRule()); 
            pushFollow(FOLLOW_ruleMapview_in_entryRuleMapview7835);
            iv_ruleMapview=ruleMapview();

            state._fsp--;

             current =iv_ruleMapview; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMapview7845); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapview"


    // $ANTLR start "ruleMapview"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3235:1: ruleMapview returns [EObject current=null] : (otherlv_0= 'Mapview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleMapview() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_height_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_Visibility_21_0 = null;

        EObject lv_Visibility_23_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3238:28: ( (otherlv_0= 'Mapview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3239:1: (otherlv_0= 'Mapview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3239:1: (otherlv_0= 'Mapview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3239:3: otherlv_0= 'Mapview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,37,FOLLOW_37_in_ruleMapview7882); 

                	newLeafNode(otherlv_0, grammarAccess.getMapviewAccess().getMapviewKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3243:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3245:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3245:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3246:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3249:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3250:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3250:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+
            int cnt49=0;
            loop49:
            do {
                int alt49=8;
                int LA49_0 = input.LA(1);

                if ( LA49_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 0) ) {
                    alt49=1;
                }
                else if ( LA49_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 1) ) {
                    alt49=2;
                }
                else if ( LA49_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 2) ) {
                    alt49=3;
                }
                else if ( LA49_0 ==36 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 3) ) {
                    alt49=4;
                }
                else if ( LA49_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 4) ) {
                    alt49=5;
                }
                else if ( LA49_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 5) ) {
                    alt49=6;
                }
                else if ( LA49_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 6) ) {
                    alt49=7;
                }


                switch (alt49) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3252:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3252:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3253:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3253:104: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3254:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3257:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3257:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3257:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3257:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleMapview7940); 

            	        	newLeafNode(otherlv_2, grammarAccess.getMapviewAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3261:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3262:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3262:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3263:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getMapviewAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleMapview7961);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3286:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3286:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3287:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3287:104: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3288:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3291:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3291:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3291:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3291:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleMapview8029); 

            	        	newLeafNode(otherlv_4, grammarAccess.getMapviewAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3295:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3296:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3296:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3297:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3297:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt45=2;
            	    int LA45_0 = input.LA(1);

            	    if ( (LA45_0==RULE_ID) ) {
            	        alt45=1;
            	    }
            	    else if ( (LA45_0==RULE_STRING) ) {
            	        alt45=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 45, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt45) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3298:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleMapview8048); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getMapviewAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getMapviewRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3313:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleMapview8068); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getMapviewAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getMapviewRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3338:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3338:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3339:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3339:104: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3340:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3343:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3343:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3343:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3343:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleMapview8144); 

            	        	newLeafNode(otherlv_6, grammarAccess.getMapviewAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3347:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3348:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3348:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3349:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getMapviewAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleMapview8165);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3372:4: ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3372:4: ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3373:5: {...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3373:104: ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3374:6: ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3377:6: ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3377:7: {...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3377:16: (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3377:18: otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,36,FOLLOW_36_in_ruleMapview8233); 

            	        	newLeafNode(otherlv_8, grammarAccess.getMapviewAccess().getHeightKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3381:1: ( (lv_height_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3382:1: (lv_height_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3382:1: (lv_height_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3383:3: lv_height_9_0= RULE_INT
            	    {
            	    lv_height_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleMapview8250); 

            	    			newLeafNode(lv_height_9_0, grammarAccess.getMapviewAccess().getHeightINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getMapviewRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"height",
            	            		lv_height_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3406:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3406:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3407:5: {...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3407:104: ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3408:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3411:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3411:7: {...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3411:16: (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3411:18: otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    {
            	    otherlv_10=(Token)match(input,19,FOLLOW_19_in_ruleMapview8323); 

            	        	newLeafNode(otherlv_10, grammarAccess.getMapviewAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3415:1: ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3415:2: ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3415:2: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3416:1: (lv_LabelColor_11_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3416:1: (lv_LabelColor_11_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3417:3: lv_LabelColor_11_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getMapviewAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleMapview8345);
            	    lv_LabelColor_11_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_11_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3433:2: (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )*
            	    loop46:
            	    do {
            	        int alt46=2;
            	        int LA46_0 = input.LA(1);

            	        if ( (LA46_0==20) ) {
            	            alt46=1;
            	        }


            	        switch (alt46) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3433:4: otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_12=(Token)match(input,20,FOLLOW_20_in_ruleMapview8358); 

            	    	        	newLeafNode(otherlv_12, grammarAccess.getMapviewAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3437:1: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3438:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3438:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3439:3: lv_LabelColor_13_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getMapviewAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleMapview8379);
            	    	    lv_LabelColor_13_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_13_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop46;
            	        }
            	    } while (true);

            	    otherlv_14=(Token)match(input,21,FOLLOW_21_in_ruleMapview8393); 

            	        	newLeafNode(otherlv_14, grammarAccess.getMapviewAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3466:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3466:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3467:5: {...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3467:104: ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3468:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3471:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3471:7: {...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3471:16: (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3471:18: otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    {
            	    otherlv_15=(Token)match(input,22,FOLLOW_22_in_ruleMapview8462); 

            	        	newLeafNode(otherlv_15, grammarAccess.getMapviewAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3475:1: ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3475:2: ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3475:2: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3476:1: (lv_ValueColor_16_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3476:1: (lv_ValueColor_16_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3477:3: lv_ValueColor_16_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getMapviewAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleMapview8484);
            	    lv_ValueColor_16_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_16_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3493:2: (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )*
            	    loop47:
            	    do {
            	        int alt47=2;
            	        int LA47_0 = input.LA(1);

            	        if ( (LA47_0==20) ) {
            	            alt47=1;
            	        }


            	        switch (alt47) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3493:4: otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_17=(Token)match(input,20,FOLLOW_20_in_ruleMapview8497); 

            	    	        	newLeafNode(otherlv_17, grammarAccess.getMapviewAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3497:1: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3498:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3498:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3499:3: lv_ValueColor_18_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getMapviewAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleMapview8518);
            	    	    lv_ValueColor_18_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_18_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop47;
            	        }
            	    } while (true);

            	    otherlv_19=(Token)match(input,21,FOLLOW_21_in_ruleMapview8532); 

            	        	newLeafNode(otherlv_19, grammarAccess.getMapviewAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3526:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3526:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3527:5: {...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canSelect(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3527:104: ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3528:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getMapviewAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3531:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3531:7: {...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleMapview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3531:16: (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3531:18: otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    {
            	    otherlv_20=(Token)match(input,23,FOLLOW_23_in_ruleMapview8601); 

            	        	newLeafNode(otherlv_20, grammarAccess.getMapviewAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3535:1: ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3535:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3535:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3536:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3536:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3537:3: lv_Visibility_21_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getMapviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleMapview8623);
            	    lv_Visibility_21_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_21_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3553:2: (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )*
            	    loop48:
            	    do {
            	        int alt48=2;
            	        int LA48_0 = input.LA(1);

            	        if ( (LA48_0==20) ) {
            	            alt48=1;
            	        }


            	        switch (alt48) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3553:4: otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_22=(Token)match(input,20,FOLLOW_20_in_ruleMapview8636); 

            	    	        	newLeafNode(otherlv_22, grammarAccess.getMapviewAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3557:1: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3558:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3558:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3559:3: lv_Visibility_23_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getMapviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleMapview8657);
            	    	    lv_Visibility_23_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getMapviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_23_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop48;
            	        }
            	    } while (true);

            	    otherlv_24=(Token)match(input,21,FOLLOW_21_in_ruleMapview8671); 

            	        	newLeafNode(otherlv_24, grammarAccess.getMapviewAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt49 >= 1 ) break loop49;
                        EarlyExitException eee =
                            new EarlyExitException(49, input);
                        throw eee;
                }
                cnt49++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getMapviewAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleMapview", "getUnorderedGroupHelper().canLeave(grammarAccess.getMapviewAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getMapviewAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapview"


    // $ANTLR start "entryRuleSwitch"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3602:1: entryRuleSwitch returns [EObject current=null] : iv_ruleSwitch= ruleSwitch EOF ;
    public final EObject entryRuleSwitch() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitch = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3603:2: (iv_ruleSwitch= ruleSwitch EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3604:2: iv_ruleSwitch= ruleSwitch EOF
            {
             newCompositeNode(grammarAccess.getSwitchRule()); 
            pushFollow(FOLLOW_ruleSwitch_in_entryRuleSwitch8755);
            iv_ruleSwitch=ruleSwitch();

            state._fsp--;

             current =iv_ruleSwitch; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSwitch8765); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitch"


    // $ANTLR start "ruleSwitch"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3611:1: ruleSwitch returns [EObject current=null] : (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSwitch() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_mappings_9_0 = null;

        EObject lv_mappings_11_0 = null;

        EObject lv_LabelColor_14_0 = null;

        EObject lv_LabelColor_16_0 = null;

        EObject lv_ValueColor_19_0 = null;

        EObject lv_ValueColor_21_0 = null;

        EObject lv_Visibility_24_0 = null;

        EObject lv_Visibility_26_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3614:28: ( (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3615:1: (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3615:1: (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3615:3: otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,38,FOLLOW_38_in_ruleSwitch8802); 

                	newLeafNode(otherlv_0, grammarAccess.getSwitchAccess().getSwitchKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3619:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3621:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3621:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3622:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3625:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3626:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3626:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+
            int cnt55=0;
            loop55:
            do {
                int alt55=8;
                int LA55_0 = input.LA(1);

                if ( LA55_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0) ) {
                    alt55=1;
                }
                else if ( LA55_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1) ) {
                    alt55=2;
                }
                else if ( LA55_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2) ) {
                    alt55=3;
                }
                else if ( LA55_0 ==39 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3) ) {
                    alt55=4;
                }
                else if ( LA55_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4) ) {
                    alt55=5;
                }
                else if ( LA55_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5) ) {
                    alt55=6;
                }
                else if ( LA55_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6) ) {
                    alt55=7;
                }


                switch (alt55) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3628:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3628:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3629:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3629:103: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3630:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3633:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3633:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3633:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3633:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSwitch8860); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSwitchAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3637:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3638:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3638:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3639:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSwitch8881);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3662:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3662:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3663:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3663:103: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3664:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3667:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3667:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3667:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3667:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSwitch8949); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSwitchAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3671:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3672:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3672:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3673:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3673:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt50=2;
            	    int LA50_0 = input.LA(1);

            	    if ( (LA50_0==RULE_ID) ) {
            	        alt50=1;
            	    }
            	    else if ( (LA50_0==RULE_STRING) ) {
            	        alt50=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 50, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt50) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3674:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSwitch8968); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSwitchAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSwitchRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3689:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSwitch8988); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSwitchAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSwitchRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3714:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3714:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3715:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3715:103: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3716:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3719:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3719:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3719:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3719:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSwitch9064); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSwitchAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3723:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3724:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3724:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3725:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSwitch9085);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3748:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3748:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3749:5: {...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3749:103: ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3750:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3753:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3753:7: {...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3753:16: (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3753:18: otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']'
            	    {
            	    otherlv_8=(Token)match(input,39,FOLLOW_39_in_ruleSwitch9153); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSwitchAccess().getMappingsKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3757:1: ( (lv_mappings_9_0= ruleMapping ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3758:1: (lv_mappings_9_0= ruleMapping )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3758:1: (lv_mappings_9_0= ruleMapping )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3759:3: lv_mappings_9_0= ruleMapping
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getMappingsMappingParserRuleCall_1_3_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleMapping_in_ruleSwitch9174);
            	    lv_mappings_9_0=ruleMapping();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"mappings",
            	            		lv_mappings_9_0, 
            	            		"Mapping");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3775:2: (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )*
            	    loop51:
            	    do {
            	        int alt51=2;
            	        int LA51_0 = input.LA(1);

            	        if ( (LA51_0==20) ) {
            	            alt51=1;
            	        }


            	        switch (alt51) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3775:4: otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FOLLOW_20_in_ruleSwitch9187); 

            	    	        	newLeafNode(otherlv_10, grammarAccess.getSwitchAccess().getCommaKeyword_1_3_2_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3779:1: ( (lv_mappings_11_0= ruleMapping ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3780:1: (lv_mappings_11_0= ruleMapping )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3780:1: (lv_mappings_11_0= ruleMapping )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3781:3: lv_mappings_11_0= ruleMapping
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getMappingsMappingParserRuleCall_1_3_2_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleMapping_in_ruleSwitch9208);
            	    	    lv_mappings_11_0=ruleMapping();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"mappings",
            	    	            		lv_mappings_11_0, 
            	    	            		"Mapping");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop51;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleSwitch9222); 

            	        	newLeafNode(otherlv_12, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_3_3());
            	        

            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3808:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3808:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3809:5: {...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3809:103: ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3810:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3813:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3813:7: {...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3813:16: (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3813:18: otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    {
            	    otherlv_13=(Token)match(input,19,FOLLOW_19_in_ruleSwitch9290); 

            	        	newLeafNode(otherlv_13, grammarAccess.getSwitchAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3817:1: ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3817:2: ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3817:2: ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3818:1: (lv_LabelColor_14_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3818:1: (lv_LabelColor_14_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3819:3: lv_LabelColor_14_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch9312);
            	    lv_LabelColor_14_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_14_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3835:2: (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )*
            	    loop52:
            	    do {
            	        int alt52=2;
            	        int LA52_0 = input.LA(1);

            	        if ( (LA52_0==20) ) {
            	            alt52=1;
            	        }


            	        switch (alt52) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3835:4: otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_15=(Token)match(input,20,FOLLOW_20_in_ruleSwitch9325); 

            	    	        	newLeafNode(otherlv_15, grammarAccess.getSwitchAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3839:1: ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3840:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3840:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3841:3: lv_LabelColor_16_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch9346);
            	    	    lv_LabelColor_16_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_16_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop52;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,21,FOLLOW_21_in_ruleSwitch9360); 

            	        	newLeafNode(otherlv_17, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3868:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3868:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3869:5: {...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3869:103: ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3870:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3873:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3873:7: {...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3873:16: (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3873:18: otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    {
            	    otherlv_18=(Token)match(input,22,FOLLOW_22_in_ruleSwitch9429); 

            	        	newLeafNode(otherlv_18, grammarAccess.getSwitchAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3877:1: ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3877:2: ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3877:2: ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3878:1: (lv_ValueColor_19_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3878:1: (lv_ValueColor_19_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3879:3: lv_ValueColor_19_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch9451);
            	    lv_ValueColor_19_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_19_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3895:2: (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )*
            	    loop53:
            	    do {
            	        int alt53=2;
            	        int LA53_0 = input.LA(1);

            	        if ( (LA53_0==20) ) {
            	            alt53=1;
            	        }


            	        switch (alt53) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3895:4: otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_20=(Token)match(input,20,FOLLOW_20_in_ruleSwitch9464); 

            	    	        	newLeafNode(otherlv_20, grammarAccess.getSwitchAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3899:1: ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3900:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3900:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3901:3: lv_ValueColor_21_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch9485);
            	    	    lv_ValueColor_21_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_21_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop53;
            	        }
            	    } while (true);

            	    otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleSwitch9499); 

            	        	newLeafNode(otherlv_22, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3928:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3928:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3929:5: {...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3929:103: ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3930:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3933:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3933:7: {...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3933:16: (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3933:18: otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    {
            	    otherlv_23=(Token)match(input,23,FOLLOW_23_in_ruleSwitch9568); 

            	        	newLeafNode(otherlv_23, grammarAccess.getSwitchAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3937:1: ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3937:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3937:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3938:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3938:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3939:3: lv_Visibility_24_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSwitch9590);
            	    lv_Visibility_24_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_24_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3955:2: (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )*
            	    loop54:
            	    do {
            	        int alt54=2;
            	        int LA54_0 = input.LA(1);

            	        if ( (LA54_0==20) ) {
            	            alt54=1;
            	        }


            	        switch (alt54) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3955:4: otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_25=(Token)match(input,20,FOLLOW_20_in_ruleSwitch9603); 

            	    	        	newLeafNode(otherlv_25, grammarAccess.getSwitchAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3959:1: ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3960:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3960:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3961:3: lv_Visibility_26_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSwitch9624);
            	    	    lv_Visibility_26_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_26_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop54;
            	        }
            	    } while (true);

            	    otherlv_27=(Token)match(input,21,FOLLOW_21_in_ruleSwitch9638); 

            	        	newLeafNode(otherlv_27, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt55 >= 1 ) break loop55;
                        EarlyExitException eee =
                            new EarlyExitException(55, input);
                        throw eee;
                }
                cnt55++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitch"


    // $ANTLR start "entryRuleSlider"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4004:1: entryRuleSlider returns [EObject current=null] : iv_ruleSlider= ruleSlider EOF ;
    public final EObject entryRuleSlider() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlider = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4005:2: (iv_ruleSlider= ruleSlider EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4006:2: iv_ruleSlider= ruleSlider EOF
            {
             newCompositeNode(grammarAccess.getSliderRule()); 
            pushFollow(FOLLOW_ruleSlider_in_entryRuleSlider9722);
            iv_ruleSlider=ruleSlider();

            state._fsp--;

             current =iv_ruleSlider; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSlider9732); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlider"


    // $ANTLR start "ruleSlider"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4013:1: ruleSlider returns [EObject current=null] : (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSlider() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_frequency_9_0=null;
        Token lv_switchEnabled_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_12_0 = null;

        EObject lv_LabelColor_14_0 = null;

        EObject lv_ValueColor_17_0 = null;

        EObject lv_ValueColor_19_0 = null;

        EObject lv_Visibility_22_0 = null;

        EObject lv_Visibility_24_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4016:28: ( (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4017:1: (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4017:1: (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4017:3: otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,40,FOLLOW_40_in_ruleSlider9769); 

                	newLeafNode(otherlv_0, grammarAccess.getSliderAccess().getSliderKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4021:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4023:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4023:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4024:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4027:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4028:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4028:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+
            int cnt60=0;
            loop60:
            do {
                int alt60=9;
                alt60 = dfa60.predict(input);
                switch (alt60) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4030:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4030:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4031:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4031:103: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4032:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4035:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4035:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4035:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4035:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSlider9827); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSliderAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4039:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4040:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4040:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4041:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSlider9848);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4064:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4064:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4065:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4065:103: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4066:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4069:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4069:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4069:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4069:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSlider9916); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSliderAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4073:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4074:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4074:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4075:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4075:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt56=2;
            	    int LA56_0 = input.LA(1);

            	    if ( (LA56_0==RULE_ID) ) {
            	        alt56=1;
            	    }
            	    else if ( (LA56_0==RULE_STRING) ) {
            	        alt56=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 56, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt56) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4076:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSlider9935); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSliderRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4091:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSlider9955); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSliderAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSliderRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4116:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4116:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4117:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4117:103: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4118:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4121:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4121:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4121:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4121:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSlider10031); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSliderAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4125:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4126:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4126:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4127:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSlider10052);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4150:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4150:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4151:5: {...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4151:103: ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4152:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4155:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4155:7: {...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4155:16: (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4155:18: otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,41,FOLLOW_41_in_ruleSlider10120); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSliderAccess().getSendFrequencyKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4159:1: ( (lv_frequency_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4160:1: (lv_frequency_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4160:1: (lv_frequency_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4161:3: lv_frequency_9_0= RULE_INT
            	    {
            	    lv_frequency_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleSlider10137); 

            	    			newLeafNode(lv_frequency_9_0, grammarAccess.getSliderAccess().getFrequencyINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getSliderRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"frequency",
            	            		lv_frequency_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4184:4: ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4184:4: ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4185:5: {...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4185:103: ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4186:6: ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4189:6: ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4189:7: {...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4189:16: ( (lv_switchEnabled_10_0= 'switchSupport' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4190:1: (lv_switchEnabled_10_0= 'switchSupport' )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4190:1: (lv_switchEnabled_10_0= 'switchSupport' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4191:3: lv_switchEnabled_10_0= 'switchSupport'
            	    {
            	    lv_switchEnabled_10_0=(Token)match(input,42,FOLLOW_42_in_ruleSlider10215); 

            	            newLeafNode(lv_switchEnabled_10_0, grammarAccess.getSliderAccess().getSwitchEnabledSwitchSupportKeyword_1_4_0());
            	        

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getSliderRule());
            	    	        }
            	           		setWithLastConsumed(current, "switchEnabled", true, "switchSupport");
            	    	    

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4211:4: ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4211:4: ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4212:5: {...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4212:103: ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4213:6: ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4216:6: ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4216:7: {...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4216:16: (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4216:18: otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' )
            	    {
            	    otherlv_11=(Token)match(input,19,FOLLOW_19_in_ruleSlider10295); 

            	        	newLeafNode(otherlv_11, grammarAccess.getSliderAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4220:1: ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4220:2: ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4220:2: ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4221:1: (lv_LabelColor_12_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4221:1: (lv_LabelColor_12_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4222:3: lv_LabelColor_12_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider10317);
            	    lv_LabelColor_12_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_12_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4238:2: (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )*
            	    loop57:
            	    do {
            	        int alt57=2;
            	        int LA57_0 = input.LA(1);

            	        if ( (LA57_0==20) ) {
            	            alt57=1;
            	        }


            	        switch (alt57) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4238:4: otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_13=(Token)match(input,20,FOLLOW_20_in_ruleSlider10330); 

            	    	        	newLeafNode(otherlv_13, grammarAccess.getSliderAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4242:1: ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4243:1: (lv_LabelColor_14_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4243:1: (lv_LabelColor_14_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4244:3: lv_LabelColor_14_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSliderAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider10351);
            	    	    lv_LabelColor_14_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_14_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop57;
            	        }
            	    } while (true);

            	    otherlv_15=(Token)match(input,21,FOLLOW_21_in_ruleSlider10365); 

            	        	newLeafNode(otherlv_15, grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4271:4: ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4271:4: ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4272:5: {...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4272:103: ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4273:6: ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4276:6: ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4276:7: {...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4276:16: (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4276:18: otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' )
            	    {
            	    otherlv_16=(Token)match(input,22,FOLLOW_22_in_ruleSlider10434); 

            	        	newLeafNode(otherlv_16, grammarAccess.getSliderAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4280:1: ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4280:2: ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4280:2: ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4281:1: (lv_ValueColor_17_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4281:1: (lv_ValueColor_17_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4282:3: lv_ValueColor_17_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider10456);
            	    lv_ValueColor_17_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_17_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4298:2: (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )*
            	    loop58:
            	    do {
            	        int alt58=2;
            	        int LA58_0 = input.LA(1);

            	        if ( (LA58_0==20) ) {
            	            alt58=1;
            	        }


            	        switch (alt58) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4298:4: otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_18=(Token)match(input,20,FOLLOW_20_in_ruleSlider10469); 

            	    	        	newLeafNode(otherlv_18, grammarAccess.getSliderAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4302:1: ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4303:1: (lv_ValueColor_19_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4303:1: (lv_ValueColor_19_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4304:3: lv_ValueColor_19_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSliderAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider10490);
            	    	    lv_ValueColor_19_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_19_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop58;
            	        }
            	    } while (true);

            	    otherlv_20=(Token)match(input,21,FOLLOW_21_in_ruleSlider10504); 

            	        	newLeafNode(otherlv_20, grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4331:4: ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4331:4: ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4332:5: {...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4332:103: ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4333:6: ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4336:6: ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4336:7: {...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4336:16: (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4336:18: otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' )
            	    {
            	    otherlv_21=(Token)match(input,23,FOLLOW_23_in_ruleSlider10573); 

            	        	newLeafNode(otherlv_21, grammarAccess.getSliderAccess().getVisibilityKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4340:1: ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4340:2: ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4340:2: ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4341:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4341:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4342:3: lv_Visibility_22_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSlider10595);
            	    lv_Visibility_22_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_22_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4358:2: (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )*
            	    loop59:
            	    do {
            	        int alt59=2;
            	        int LA59_0 = input.LA(1);

            	        if ( (LA59_0==20) ) {
            	            alt59=1;
            	        }


            	        switch (alt59) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4358:4: otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_23=(Token)match(input,20,FOLLOW_20_in_ruleSlider10608); 

            	    	        	newLeafNode(otherlv_23, grammarAccess.getSliderAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4362:1: ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4363:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4363:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4364:3: lv_Visibility_24_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSliderAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSlider10629);
            	    	    lv_Visibility_24_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_24_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop59;
            	        }
            	    } while (true);

            	    otherlv_25=(Token)match(input,21,FOLLOW_21_in_ruleSlider10643); 

            	        	newLeafNode(otherlv_25, grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt60 >= 1 ) break loop60;
                        EarlyExitException eee =
                            new EarlyExitException(60, input);
                        throw eee;
                }
                cnt60++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSliderAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canLeave(grammarAccess.getSliderAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlider"


    // $ANTLR start "entryRuleSelection"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4407:1: entryRuleSelection returns [EObject current=null] : iv_ruleSelection= ruleSelection EOF ;
    public final EObject entryRuleSelection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelection = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4408:2: (iv_ruleSelection= ruleSelection EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4409:2: iv_ruleSelection= ruleSelection EOF
            {
             newCompositeNode(grammarAccess.getSelectionRule()); 
            pushFollow(FOLLOW_ruleSelection_in_entryRuleSelection10727);
            iv_ruleSelection=ruleSelection();

            state._fsp--;

             current =iv_ruleSelection; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSelection10737); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelection"


    // $ANTLR start "ruleSelection"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4416:1: ruleSelection returns [EObject current=null] : (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSelection() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_mappings_9_0 = null;

        EObject lv_mappings_11_0 = null;

        EObject lv_LabelColor_14_0 = null;

        EObject lv_LabelColor_16_0 = null;

        EObject lv_ValueColor_19_0 = null;

        EObject lv_ValueColor_21_0 = null;

        EObject lv_Visibility_24_0 = null;

        EObject lv_Visibility_26_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4419:28: ( (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4420:1: (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4420:1: (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4420:3: otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,43,FOLLOW_43_in_ruleSelection10774); 

                	newLeafNode(otherlv_0, grammarAccess.getSelectionAccess().getSelectionKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4424:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4426:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4426:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4427:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4430:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4431:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4431:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+
            int cnt66=0;
            loop66:
            do {
                int alt66=8;
                int LA66_0 = input.LA(1);

                if ( LA66_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0) ) {
                    alt66=1;
                }
                else if ( LA66_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1) ) {
                    alt66=2;
                }
                else if ( LA66_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2) ) {
                    alt66=3;
                }
                else if ( LA66_0 ==39 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3) ) {
                    alt66=4;
                }
                else if ( LA66_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4) ) {
                    alt66=5;
                }
                else if ( LA66_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5) ) {
                    alt66=6;
                }
                else if ( LA66_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6) ) {
                    alt66=7;
                }


                switch (alt66) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4433:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4433:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4434:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4434:106: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4435:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4438:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4438:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4438:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4438:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSelection10832); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSelectionAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4442:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4443:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4443:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4444:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSelection10853);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4467:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4467:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4468:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4468:106: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4469:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4472:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4472:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4472:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4472:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSelection10921); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSelectionAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4476:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4477:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4477:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4478:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4478:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt61=2;
            	    int LA61_0 = input.LA(1);

            	    if ( (LA61_0==RULE_ID) ) {
            	        alt61=1;
            	    }
            	    else if ( (LA61_0==RULE_STRING) ) {
            	        alt61=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 61, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt61) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4479:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSelection10940); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSelectionAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSelectionRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4494:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSelection10960); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSelectionAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSelectionRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4519:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4519:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4520:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4520:106: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4521:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4524:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4524:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4524:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4524:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSelection11036); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSelectionAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4528:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4529:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4529:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4530:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSelection11057);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4553:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4553:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4554:5: {...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4554:106: ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4555:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4558:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4558:7: {...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4558:16: (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4558:18: otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']'
            	    {
            	    otherlv_8=(Token)match(input,39,FOLLOW_39_in_ruleSelection11125); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSelectionAccess().getMappingsKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4562:1: ( (lv_mappings_9_0= ruleMapping ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4563:1: (lv_mappings_9_0= ruleMapping )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4563:1: (lv_mappings_9_0= ruleMapping )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4564:3: lv_mappings_9_0= ruleMapping
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getMappingsMappingParserRuleCall_1_3_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleMapping_in_ruleSelection11146);
            	    lv_mappings_9_0=ruleMapping();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"mappings",
            	            		lv_mappings_9_0, 
            	            		"Mapping");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4580:2: (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )*
            	    loop62:
            	    do {
            	        int alt62=2;
            	        int LA62_0 = input.LA(1);

            	        if ( (LA62_0==20) ) {
            	            alt62=1;
            	        }


            	        switch (alt62) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4580:4: otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FOLLOW_20_in_ruleSelection11159); 

            	    	        	newLeafNode(otherlv_10, grammarAccess.getSelectionAccess().getCommaKeyword_1_3_2_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4584:1: ( (lv_mappings_11_0= ruleMapping ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4585:1: (lv_mappings_11_0= ruleMapping )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4585:1: (lv_mappings_11_0= ruleMapping )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4586:3: lv_mappings_11_0= ruleMapping
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getMappingsMappingParserRuleCall_1_3_2_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleMapping_in_ruleSelection11180);
            	    	    lv_mappings_11_0=ruleMapping();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"mappings",
            	    	            		lv_mappings_11_0, 
            	    	            		"Mapping");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop62;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleSelection11194); 

            	        	newLeafNode(otherlv_12, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_3_3());
            	        

            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4613:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4613:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4614:5: {...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4614:106: ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4615:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4618:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4618:7: {...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4618:16: (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4618:18: otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    {
            	    otherlv_13=(Token)match(input,19,FOLLOW_19_in_ruleSelection11262); 

            	        	newLeafNode(otherlv_13, grammarAccess.getSelectionAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4622:1: ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4622:2: ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4622:2: ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4623:1: (lv_LabelColor_14_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4623:1: (lv_LabelColor_14_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4624:3: lv_LabelColor_14_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection11284);
            	    lv_LabelColor_14_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_14_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4640:2: (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )*
            	    loop63:
            	    do {
            	        int alt63=2;
            	        int LA63_0 = input.LA(1);

            	        if ( (LA63_0==20) ) {
            	            alt63=1;
            	        }


            	        switch (alt63) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4640:4: otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_15=(Token)match(input,20,FOLLOW_20_in_ruleSelection11297); 

            	    	        	newLeafNode(otherlv_15, grammarAccess.getSelectionAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4644:1: ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4645:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4645:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4646:3: lv_LabelColor_16_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection11318);
            	    	    lv_LabelColor_16_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_16_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop63;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,21,FOLLOW_21_in_ruleSelection11332); 

            	        	newLeafNode(otherlv_17, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4673:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4673:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4674:5: {...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4674:106: ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4675:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4678:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4678:7: {...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4678:16: (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4678:18: otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    {
            	    otherlv_18=(Token)match(input,22,FOLLOW_22_in_ruleSelection11401); 

            	        	newLeafNode(otherlv_18, grammarAccess.getSelectionAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4682:1: ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4682:2: ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4682:2: ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4683:1: (lv_ValueColor_19_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4683:1: (lv_ValueColor_19_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4684:3: lv_ValueColor_19_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection11423);
            	    lv_ValueColor_19_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_19_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4700:2: (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )*
            	    loop64:
            	    do {
            	        int alt64=2;
            	        int LA64_0 = input.LA(1);

            	        if ( (LA64_0==20) ) {
            	            alt64=1;
            	        }


            	        switch (alt64) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4700:4: otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_20=(Token)match(input,20,FOLLOW_20_in_ruleSelection11436); 

            	    	        	newLeafNode(otherlv_20, grammarAccess.getSelectionAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4704:1: ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4705:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4705:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4706:3: lv_ValueColor_21_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection11457);
            	    	    lv_ValueColor_21_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_21_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop64;
            	        }
            	    } while (true);

            	    otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleSelection11471); 

            	        	newLeafNode(otherlv_22, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4733:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4733:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4734:5: {...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4734:106: ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4735:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4738:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4738:7: {...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4738:16: (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4738:18: otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    {
            	    otherlv_23=(Token)match(input,23,FOLLOW_23_in_ruleSelection11540); 

            	        	newLeafNode(otherlv_23, grammarAccess.getSelectionAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4742:1: ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4742:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4742:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4743:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4743:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4744:3: lv_Visibility_24_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSelection11562);
            	    lv_Visibility_24_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_24_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4760:2: (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )*
            	    loop65:
            	    do {
            	        int alt65=2;
            	        int LA65_0 = input.LA(1);

            	        if ( (LA65_0==20) ) {
            	            alt65=1;
            	        }


            	        switch (alt65) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4760:4: otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_25=(Token)match(input,20,FOLLOW_20_in_ruleSelection11575); 

            	    	        	newLeafNode(otherlv_25, grammarAccess.getSelectionAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4764:1: ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4765:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4765:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4766:3: lv_Visibility_26_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSelection11596);
            	    	    lv_Visibility_26_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_26_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop65;
            	        }
            	    } while (true);

            	    otherlv_27=(Token)match(input,21,FOLLOW_21_in_ruleSelection11610); 

            	        	newLeafNode(otherlv_27, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt66 >= 1 ) break loop66;
                        EarlyExitException eee =
                            new EarlyExitException(66, input);
                        throw eee;
                }
                cnt66++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSelectionAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canLeave(grammarAccess.getSelectionAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelection"


    // $ANTLR start "entryRuleList"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4809:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4810:2: (iv_ruleList= ruleList EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4811:2: iv_ruleList= ruleList EOF
            {
             newCompositeNode(grammarAccess.getListRule()); 
            pushFollow(FOLLOW_ruleList_in_entryRuleList11694);
            iv_ruleList=ruleList();

            state._fsp--;

             current =iv_ruleList; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleList11704); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4818:1: ruleList returns [EObject current=null] : (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_separator_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_Visibility_21_0 = null;

        EObject lv_Visibility_23_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4821:28: ( (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4822:1: (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4822:1: (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4822:3: otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,44,FOLLOW_44_in_ruleList11741); 

                	newLeafNode(otherlv_0, grammarAccess.getListAccess().getListKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4826:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4828:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4828:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4829:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getListAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4832:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4833:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4833:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+
            int cnt72=0;
            loop72:
            do {
                int alt72=7;
                int LA72_0 = input.LA(1);

                if ( LA72_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 0) ) {
                    alt72=1;
                }
                else if ( LA72_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 1) ) {
                    alt72=2;
                }
                else if ( (LA72_0==14||LA72_0==45) && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 2) ) {
                    alt72=3;
                }
                else if ( LA72_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 3) ) {
                    alt72=4;
                }
                else if ( LA72_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 4) ) {
                    alt72=5;
                }
                else if ( LA72_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 5) ) {
                    alt72=6;
                }


                switch (alt72) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4835:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4835:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4836:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4836:101: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4837:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4840:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4840:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4840:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4840:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleList11799); 

            	        	newLeafNode(otherlv_2, grammarAccess.getListAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4844:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4845:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4845:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4846:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleList11820);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4869:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4869:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4870:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4870:101: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4871:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4874:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4874:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4874:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4874:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleList11888); 

            	        	newLeafNode(otherlv_4, grammarAccess.getListAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4878:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4879:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4879:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4880:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4880:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt67=2;
            	    int LA67_0 = input.LA(1);

            	    if ( (LA67_0==RULE_ID) ) {
            	        alt67=1;
            	    }
            	    else if ( (LA67_0==RULE_STRING) ) {
            	        alt67=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 67, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt67) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4881:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleList11907); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getListAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getListRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4896:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleList11927); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getListAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getListRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4921:4: ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4921:4: ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4922:5: {...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4922:101: ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4923:6: ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4926:6: ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4926:7: {...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4926:16: ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4926:17: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4926:17: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )?
            	    int alt68=2;
            	    int LA68_0 = input.LA(1);

            	    if ( (LA68_0==14) ) {
            	        alt68=1;
            	    }
            	    switch (alt68) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4926:19: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	            {
            	            otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleList12004); 

            	                	newLeafNode(otherlv_6, grammarAccess.getListAccess().getIconKeyword_1_2_0_0());
            	                
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4930:1: ( (lv_icon_7_0= ruleIcon ) )
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4931:1: (lv_icon_7_0= ruleIcon )
            	            {
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4931:1: (lv_icon_7_0= ruleIcon )
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4932:3: lv_icon_7_0= ruleIcon
            	            {
            	             
            	            	        newCompositeNode(grammarAccess.getListAccess().getIconIconParserRuleCall_1_2_0_1_0()); 
            	            	    
            	            pushFollow(FOLLOW_ruleIcon_in_ruleList12025);
            	            lv_icon_7_0=ruleIcon();

            	            state._fsp--;


            	            	        if (current==null) {
            	            	            current = createModelElementForParent(grammarAccess.getListRule());
            	            	        }
            	                   		set(
            	                   			current, 
            	                   			"icon",
            	                    		lv_icon_7_0, 
            	                    		"Icon");
            	            	        afterParserOrEnumRuleCall();
            	            	    

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4948:4: (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4948:6: otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,45,FOLLOW_45_in_ruleList12040); 

            	        	newLeafNode(otherlv_8, grammarAccess.getListAccess().getSeparatorKeyword_1_2_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4952:1: ( (lv_separator_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4953:1: (lv_separator_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4953:1: (lv_separator_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4954:3: lv_separator_9_0= RULE_STRING
            	    {
            	    lv_separator_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleList12057); 

            	    			newLeafNode(lv_separator_9_0, grammarAccess.getListAccess().getSeparatorSTRINGTerminalRuleCall_1_2_1_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getListRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"separator",
            	            		lv_separator_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4977:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4977:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4978:5: {...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4978:101: ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4979:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4982:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4982:7: {...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4982:16: (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4982:18: otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    {
            	    otherlv_10=(Token)match(input,19,FOLLOW_19_in_ruleList12131); 

            	        	newLeafNode(otherlv_10, grammarAccess.getListAccess().getLabelcolorKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4986:1: ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4986:2: ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4986:2: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4987:1: (lv_LabelColor_11_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4987:1: (lv_LabelColor_11_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4988:3: lv_LabelColor_11_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getLabelColorColorArrayParserRuleCall_1_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleList12153);
            	    lv_LabelColor_11_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_11_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5004:2: (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )*
            	    loop69:
            	    do {
            	        int alt69=2;
            	        int LA69_0 = input.LA(1);

            	        if ( (LA69_0==20) ) {
            	            alt69=1;
            	        }


            	        switch (alt69) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5004:4: otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_12=(Token)match(input,20,FOLLOW_20_in_ruleList12166); 

            	    	        	newLeafNode(otherlv_12, grammarAccess.getListAccess().getCommaKeyword_1_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5008:1: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5009:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5009:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5010:3: lv_LabelColor_13_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getListAccess().getLabelColorColorArrayParserRuleCall_1_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleList12187);
            	    	    lv_LabelColor_13_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_13_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop69;
            	        }
            	    } while (true);

            	    otherlv_14=(Token)match(input,21,FOLLOW_21_in_ruleList12201); 

            	        	newLeafNode(otherlv_14, grammarAccess.getListAccess().getRightSquareBracketKeyword_1_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5037:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5037:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5038:5: {...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5038:101: ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5039:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5042:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5042:7: {...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5042:16: (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5042:18: otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    {
            	    otherlv_15=(Token)match(input,22,FOLLOW_22_in_ruleList12270); 

            	        	newLeafNode(otherlv_15, grammarAccess.getListAccess().getValuecolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5046:1: ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5046:2: ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5046:2: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5047:1: (lv_ValueColor_16_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5047:1: (lv_ValueColor_16_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5048:3: lv_ValueColor_16_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getValueColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleList12292);
            	    lv_ValueColor_16_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_16_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5064:2: (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )*
            	    loop70:
            	    do {
            	        int alt70=2;
            	        int LA70_0 = input.LA(1);

            	        if ( (LA70_0==20) ) {
            	            alt70=1;
            	        }


            	        switch (alt70) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5064:4: otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_17=(Token)match(input,20,FOLLOW_20_in_ruleList12305); 

            	    	        	newLeafNode(otherlv_17, grammarAccess.getListAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5068:1: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5069:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5069:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5070:3: lv_ValueColor_18_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getListAccess().getValueColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleList12326);
            	    	    lv_ValueColor_18_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_18_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop70;
            	        }
            	    } while (true);

            	    otherlv_19=(Token)match(input,21,FOLLOW_21_in_ruleList12340); 

            	        	newLeafNode(otherlv_19, grammarAccess.getListAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5097:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5097:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5098:5: {...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5098:101: ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5099:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5102:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5102:7: {...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5102:16: (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5102:18: otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    {
            	    otherlv_20=(Token)match(input,23,FOLLOW_23_in_ruleList12409); 

            	        	newLeafNode(otherlv_20, grammarAccess.getListAccess().getVisibilityKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5106:1: ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5106:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5106:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5107:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5107:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5108:3: lv_Visibility_21_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleList12431);
            	    lv_Visibility_21_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_21_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5124:2: (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )*
            	    loop71:
            	    do {
            	        int alt71=2;
            	        int LA71_0 = input.LA(1);

            	        if ( (LA71_0==20) ) {
            	            alt71=1;
            	        }


            	        switch (alt71) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5124:4: otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_22=(Token)match(input,20,FOLLOW_20_in_ruleList12444); 

            	    	        	newLeafNode(otherlv_22, grammarAccess.getListAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5128:1: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5129:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5129:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5130:3: lv_Visibility_23_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getListAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleList12465);
            	    	    lv_Visibility_23_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_23_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop71;
            	        }
            	    } while (true);

            	    otherlv_24=(Token)match(input,21,FOLLOW_21_in_ruleList12479); 

            	        	newLeafNode(otherlv_24, grammarAccess.getListAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt72 >= 1 ) break loop72;
                        EarlyExitException eee =
                            new EarlyExitException(72, input);
                        throw eee;
                }
                cnt72++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getListAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canLeave(grammarAccess.getListAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getListAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleSetpoint"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5173:1: entryRuleSetpoint returns [EObject current=null] : iv_ruleSetpoint= ruleSetpoint EOF ;
    public final EObject entryRuleSetpoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetpoint = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5174:2: (iv_ruleSetpoint= ruleSetpoint EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5175:2: iv_ruleSetpoint= ruleSetpoint EOF
            {
             newCompositeNode(grammarAccess.getSetpointRule()); 
            pushFollow(FOLLOW_ruleSetpoint_in_entryRuleSetpoint12563);
            iv_ruleSetpoint=ruleSetpoint();

            state._fsp--;

             current =iv_ruleSetpoint; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetpoint12573); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetpoint"


    // $ANTLR start "ruleSetpoint"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5182:1: ruleSetpoint returns [EObject current=null] : (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSetpoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        AntlrDatatypeRuleToken lv_minValue_9_0 = null;

        AntlrDatatypeRuleToken lv_maxValue_11_0 = null;

        AntlrDatatypeRuleToken lv_step_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_LabelColor_17_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_ValueColor_22_0 = null;

        EObject lv_Visibility_25_0 = null;

        EObject lv_Visibility_27_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5185:28: ( (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5186:1: (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5186:1: (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5186:3: otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,46,FOLLOW_46_in_ruleSetpoint12610); 

                	newLeafNode(otherlv_0, grammarAccess.getSetpointAccess().getSetpointKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5190:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5192:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5192:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5193:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5196:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5197:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5197:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+
            int cnt77=0;
            loop77:
            do {
                int alt77=10;
                alt77 = dfa77.predict(input);
                switch (alt77) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5199:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5199:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5200:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5200:105: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5201:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5204:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5204:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5204:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5204:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSetpoint12668); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSetpointAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5208:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5209:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5209:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5210:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSetpoint12689);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5233:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5233:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5234:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5234:105: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5235:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5238:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5238:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5238:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5238:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSetpoint12757); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSetpointAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5242:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5243:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5243:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5244:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5244:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt73=2;
            	    int LA73_0 = input.LA(1);

            	    if ( (LA73_0==RULE_ID) ) {
            	        alt73=1;
            	    }
            	    else if ( (LA73_0==RULE_STRING) ) {
            	        alt73=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 73, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt73) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5245:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSetpoint12776); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSetpointAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSetpointRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5260:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSetpoint12796); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSetpointAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSetpointRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5285:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5285:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5286:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5286:105: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5287:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5290:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5290:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5290:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5290:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSetpoint12872); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSetpointAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5294:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5295:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5295:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5296:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSetpoint12893);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5319:4: ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5319:4: ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5320:5: {...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5320:105: ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5321:6: ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5324:6: ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5324:7: {...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5324:16: (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5324:18: otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) )
            	    {
            	    otherlv_8=(Token)match(input,47,FOLLOW_47_in_ruleSetpoint12961); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSetpointAccess().getMinValueKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5328:1: ( (lv_minValue_9_0= ruleNumber ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5329:1: (lv_minValue_9_0= ruleNumber )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5329:1: (lv_minValue_9_0= ruleNumber )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5330:3: lv_minValue_9_0= ruleNumber
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getMinValueNumberParserRuleCall_1_3_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleNumber_in_ruleSetpoint12982);
            	    lv_minValue_9_0=ruleNumber();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"minValue",
            	            		lv_minValue_9_0, 
            	            		"Number");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5353:4: ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5353:4: ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5354:5: {...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5354:105: ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5355:6: ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5358:6: ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5358:7: {...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5358:16: (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5358:18: otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) )
            	    {
            	    otherlv_10=(Token)match(input,48,FOLLOW_48_in_ruleSetpoint13050); 

            	        	newLeafNode(otherlv_10, grammarAccess.getSetpointAccess().getMaxValueKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5362:1: ( (lv_maxValue_11_0= ruleNumber ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5363:1: (lv_maxValue_11_0= ruleNumber )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5363:1: (lv_maxValue_11_0= ruleNumber )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5364:3: lv_maxValue_11_0= ruleNumber
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getMaxValueNumberParserRuleCall_1_4_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleNumber_in_ruleSetpoint13071);
            	    lv_maxValue_11_0=ruleNumber();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"maxValue",
            	            		lv_maxValue_11_0, 
            	            		"Number");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5387:4: ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5387:4: ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5388:5: {...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5388:105: ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5389:6: ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5392:6: ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5392:7: {...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5392:16: (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5392:18: otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) )
            	    {
            	    otherlv_12=(Token)match(input,49,FOLLOW_49_in_ruleSetpoint13139); 

            	        	newLeafNode(otherlv_12, grammarAccess.getSetpointAccess().getStepKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5396:1: ( (lv_step_13_0= ruleNumber ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5397:1: (lv_step_13_0= ruleNumber )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5397:1: (lv_step_13_0= ruleNumber )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5398:3: lv_step_13_0= ruleNumber
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getStepNumberParserRuleCall_1_5_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleNumber_in_ruleSetpoint13160);
            	    lv_step_13_0=ruleNumber();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"step",
            	            		lv_step_13_0, 
            	            		"Number");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5421:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5421:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5422:5: {...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5422:105: ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5423:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5426:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5426:7: {...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5426:16: (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5426:18: otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,19,FOLLOW_19_in_ruleSetpoint13228); 

            	        	newLeafNode(otherlv_14, grammarAccess.getSetpointAccess().getLabelcolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5430:1: ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5430:2: ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5430:2: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5431:1: (lv_LabelColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5431:1: (lv_LabelColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5432:3: lv_LabelColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getLabelColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint13250);
            	    lv_LabelColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5448:2: (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )*
            	    loop74:
            	    do {
            	        int alt74=2;
            	        int LA74_0 = input.LA(1);

            	        if ( (LA74_0==20) ) {
            	            alt74=1;
            	        }


            	        switch (alt74) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5448:4: otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleSetpoint13263); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getSetpointAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5452:1: ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5453:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5453:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5454:3: lv_LabelColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSetpointAccess().getLabelColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint13284);
            	    	    lv_LabelColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop74;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleSetpoint13298); 

            	        	newLeafNode(otherlv_18, grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5481:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5481:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5482:5: {...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5482:105: ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5483:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5486:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5486:7: {...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5486:16: (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5486:18: otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,22,FOLLOW_22_in_ruleSetpoint13367); 

            	        	newLeafNode(otherlv_19, grammarAccess.getSetpointAccess().getValuecolorKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5490:1: ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5490:2: ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5490:2: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5491:1: (lv_ValueColor_20_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5491:1: (lv_ValueColor_20_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5492:3: lv_ValueColor_20_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getValueColorColorArrayParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint13389);
            	    lv_ValueColor_20_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_20_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5508:2: (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )*
            	    loop75:
            	    do {
            	        int alt75=2;
            	        int LA75_0 = input.LA(1);

            	        if ( (LA75_0==20) ) {
            	            alt75=1;
            	        }


            	        switch (alt75) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5508:4: otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleSetpoint13402); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getSetpointAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5512:1: ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5513:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5513:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5514:3: lv_ValueColor_22_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSetpointAccess().getValueColorColorArrayParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint13423);
            	    	    lv_ValueColor_22_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_22_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop75;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleSetpoint13437); 

            	        	newLeafNode(otherlv_23, grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5541:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5541:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5542:5: {...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5542:105: ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5543:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5546:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5546:7: {...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5546:16: (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5546:18: otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    {
            	    otherlv_24=(Token)match(input,23,FOLLOW_23_in_ruleSetpoint13506); 

            	        	newLeafNode(otherlv_24, grammarAccess.getSetpointAccess().getVisibilityKeyword_1_8_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5550:1: ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5550:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5550:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5551:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5551:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5552:3: lv_Visibility_25_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSetpoint13528);
            	    lv_Visibility_25_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_25_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5568:2: (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )*
            	    loop76:
            	    do {
            	        int alt76=2;
            	        int LA76_0 = input.LA(1);

            	        if ( (LA76_0==20) ) {
            	            alt76=1;
            	        }


            	        switch (alt76) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5568:4: otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_26=(Token)match(input,20,FOLLOW_20_in_ruleSetpoint13541); 

            	    	        	newLeafNode(otherlv_26, grammarAccess.getSetpointAccess().getCommaKeyword_1_8_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5572:1: ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5573:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5573:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5574:3: lv_Visibility_27_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSetpointAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSetpoint13562);
            	    	    lv_Visibility_27_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_27_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop76;
            	        }
            	    } while (true);

            	    otherlv_28=(Token)match(input,21,FOLLOW_21_in_ruleSetpoint13576); 

            	        	newLeafNode(otherlv_28, grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_8_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt77 >= 1 ) break loop77;
                        EarlyExitException eee =
                            new EarlyExitException(77, input);
                        throw eee;
                }
                cnt77++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSetpointAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canLeave(grammarAccess.getSetpointAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetpoint"


    // $ANTLR start "entryRuleColorpicker"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5617:1: entryRuleColorpicker returns [EObject current=null] : iv_ruleColorpicker= ruleColorpicker EOF ;
    public final EObject entryRuleColorpicker() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColorpicker = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5618:2: (iv_ruleColorpicker= ruleColorpicker EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5619:2: iv_ruleColorpicker= ruleColorpicker EOF
            {
             newCompositeNode(grammarAccess.getColorpickerRule()); 
            pushFollow(FOLLOW_ruleColorpicker_in_entryRuleColorpicker13660);
            iv_ruleColorpicker=ruleColorpicker();

            state._fsp--;

             current =iv_ruleColorpicker; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleColorpicker13670); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColorpicker"


    // $ANTLR start "ruleColorpicker"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5626:1: ruleColorpicker returns [EObject current=null] : (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleColorpicker() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_frequency_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_Visibility_21_0 = null;

        EObject lv_Visibility_23_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5629:28: ( (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5630:1: (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5630:1: (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5630:3: otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,50,FOLLOW_50_in_ruleColorpicker13707); 

                	newLeafNode(otherlv_0, grammarAccess.getColorpickerAccess().getColorpickerKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5634:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5636:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5636:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5637:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5640:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5641:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5641:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+
            int cnt82=0;
            loop82:
            do {
                int alt82=8;
                int LA82_0 = input.LA(1);

                if ( LA82_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0) ) {
                    alt82=1;
                }
                else if ( LA82_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1) ) {
                    alt82=2;
                }
                else if ( LA82_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2) ) {
                    alt82=3;
                }
                else if ( LA82_0 ==41 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3) ) {
                    alt82=4;
                }
                else if ( LA82_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4) ) {
                    alt82=5;
                }
                else if ( LA82_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5) ) {
                    alt82=6;
                }
                else if ( LA82_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6) ) {
                    alt82=7;
                }


                switch (alt82) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5643:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5643:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5644:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5644:108: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5645:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5648:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5648:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5648:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5648:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleColorpicker13765); 

            	        	newLeafNode(otherlv_2, grammarAccess.getColorpickerAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5652:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5653:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5653:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5654:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleColorpicker13786);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5677:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5677:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5678:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5678:108: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5679:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5682:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5682:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5682:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5682:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleColorpicker13854); 

            	        	newLeafNode(otherlv_4, grammarAccess.getColorpickerAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5686:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5687:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5687:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5688:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5688:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt78=2;
            	    int LA78_0 = input.LA(1);

            	    if ( (LA78_0==RULE_ID) ) {
            	        alt78=1;
            	    }
            	    else if ( (LA78_0==RULE_STRING) ) {
            	        alt78=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 78, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt78) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5689:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleColorpicker13873); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getColorpickerAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getColorpickerRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5704:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleColorpicker13893); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getColorpickerAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getColorpickerRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5729:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5729:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5730:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5730:108: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5731:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5734:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5734:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5734:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5734:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleColorpicker13969); 

            	        	newLeafNode(otherlv_6, grammarAccess.getColorpickerAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5738:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5739:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5739:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5740:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleColorpicker13990);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5763:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5763:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5764:5: {...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5764:108: ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5765:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5768:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5768:7: {...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5768:16: (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5768:18: otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,41,FOLLOW_41_in_ruleColorpicker14058); 

            	        	newLeafNode(otherlv_8, grammarAccess.getColorpickerAccess().getSendFrequencyKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5772:1: ( (lv_frequency_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5773:1: (lv_frequency_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5773:1: (lv_frequency_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5774:3: lv_frequency_9_0= RULE_INT
            	    {
            	    lv_frequency_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleColorpicker14075); 

            	    			newLeafNode(lv_frequency_9_0, grammarAccess.getColorpickerAccess().getFrequencyINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getColorpickerRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"frequency",
            	            		lv_frequency_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5797:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5797:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5798:5: {...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5798:108: ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5799:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5802:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5802:7: {...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5802:16: (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5802:18: otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    {
            	    otherlv_10=(Token)match(input,19,FOLLOW_19_in_ruleColorpicker14148); 

            	        	newLeafNode(otherlv_10, grammarAccess.getColorpickerAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5806:1: ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5806:2: ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5806:2: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5807:1: (lv_LabelColor_11_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5807:1: (lv_LabelColor_11_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5808:3: lv_LabelColor_11_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker14170);
            	    lv_LabelColor_11_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_11_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5824:2: (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )*
            	    loop79:
            	    do {
            	        int alt79=2;
            	        int LA79_0 = input.LA(1);

            	        if ( (LA79_0==20) ) {
            	            alt79=1;
            	        }


            	        switch (alt79) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5824:4: otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_12=(Token)match(input,20,FOLLOW_20_in_ruleColorpicker14183); 

            	    	        	newLeafNode(otherlv_12, grammarAccess.getColorpickerAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5828:1: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5829:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5829:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5830:3: lv_LabelColor_13_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker14204);
            	    	    lv_LabelColor_13_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_13_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop79;
            	        }
            	    } while (true);

            	    otherlv_14=(Token)match(input,21,FOLLOW_21_in_ruleColorpicker14218); 

            	        	newLeafNode(otherlv_14, grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5857:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5857:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5858:5: {...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5858:108: ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5859:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5862:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5862:7: {...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5862:16: (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5862:18: otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    {
            	    otherlv_15=(Token)match(input,22,FOLLOW_22_in_ruleColorpicker14287); 

            	        	newLeafNode(otherlv_15, grammarAccess.getColorpickerAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5866:1: ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5866:2: ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5866:2: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5867:1: (lv_ValueColor_16_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5867:1: (lv_ValueColor_16_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5868:3: lv_ValueColor_16_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker14309);
            	    lv_ValueColor_16_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_16_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5884:2: (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )*
            	    loop80:
            	    do {
            	        int alt80=2;
            	        int LA80_0 = input.LA(1);

            	        if ( (LA80_0==20) ) {
            	            alt80=1;
            	        }


            	        switch (alt80) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5884:4: otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_17=(Token)match(input,20,FOLLOW_20_in_ruleColorpicker14322); 

            	    	        	newLeafNode(otherlv_17, grammarAccess.getColorpickerAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5888:1: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5889:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5889:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5890:3: lv_ValueColor_18_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker14343);
            	    	    lv_ValueColor_18_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_18_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop80;
            	        }
            	    } while (true);

            	    otherlv_19=(Token)match(input,21,FOLLOW_21_in_ruleColorpicker14357); 

            	        	newLeafNode(otherlv_19, grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5917:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5917:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5918:5: {...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5918:108: ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5919:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5922:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5922:7: {...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5922:16: (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5922:18: otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    {
            	    otherlv_20=(Token)match(input,23,FOLLOW_23_in_ruleColorpicker14426); 

            	        	newLeafNode(otherlv_20, grammarAccess.getColorpickerAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5926:1: ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5926:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5926:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5927:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5927:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5928:3: lv_Visibility_21_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleColorpicker14448);
            	    lv_Visibility_21_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_21_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5944:2: (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )*
            	    loop81:
            	    do {
            	        int alt81=2;
            	        int LA81_0 = input.LA(1);

            	        if ( (LA81_0==20) ) {
            	            alt81=1;
            	        }


            	        switch (alt81) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5944:4: otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_22=(Token)match(input,20,FOLLOW_20_in_ruleColorpicker14461); 

            	    	        	newLeafNode(otherlv_22, grammarAccess.getColorpickerAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:1: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5949:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5949:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5950:3: lv_Visibility_23_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleColorpicker14482);
            	    	    lv_Visibility_23_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_23_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop81;
            	        }
            	    } while (true);

            	    otherlv_24=(Token)match(input,21,FOLLOW_21_in_ruleColorpicker14496); 

            	        	newLeafNode(otherlv_24, grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt82 >= 1 ) break loop82;
                        EarlyExitException eee =
                            new EarlyExitException(82, input);
                        throw eee;
                }
                cnt82++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getColorpickerAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canLeave(grammarAccess.getColorpickerAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColorpicker"


    // $ANTLR start "entryRuleMapping"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5993:1: entryRuleMapping returns [EObject current=null] : iv_ruleMapping= ruleMapping EOF ;
    public final EObject entryRuleMapping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapping = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5994:2: (iv_ruleMapping= ruleMapping EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5995:2: iv_ruleMapping= ruleMapping EOF
            {
             newCompositeNode(grammarAccess.getMappingRule()); 
            pushFollow(FOLLOW_ruleMapping_in_entryRuleMapping14580);
            iv_ruleMapping=ruleMapping();

            state._fsp--;

             current =iv_ruleMapping; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMapping14590); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapping"


    // $ANTLR start "ruleMapping"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6002:1: ruleMapping returns [EObject current=null] : ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) ) ;
    public final EObject ruleMapping() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_2_1=null;
        Token lv_label_2_2=null;
        AntlrDatatypeRuleToken lv_cmd_0_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6005:28: ( ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6006:1: ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6006:1: ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6006:2: ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6006:2: ( (lv_cmd_0_0= ruleCommand ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6007:1: (lv_cmd_0_0= ruleCommand )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6007:1: (lv_cmd_0_0= ruleCommand )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6008:3: lv_cmd_0_0= ruleCommand
            {
             
            	        newCompositeNode(grammarAccess.getMappingAccess().getCmdCommandParserRuleCall_0_0()); 
            	    
            pushFollow(FOLLOW_ruleCommand_in_ruleMapping14636);
            lv_cmd_0_0=ruleCommand();

            state._fsp--;


            	        if (current==null) {
            	            current = createModelElementForParent(grammarAccess.getMappingRule());
            	        }
                   		set(
                   			current, 
                   			"cmd",
                    		lv_cmd_0_0, 
                    		"Command");
            	        afterParserOrEnumRuleCall();
            	    

            }


            }

            otherlv_1=(Token)match(input,51,FOLLOW_51_in_ruleMapping14648); 

                	newLeafNode(otherlv_1, grammarAccess.getMappingAccess().getEqualsSignKeyword_1());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6028:1: ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6029:1: ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6029:1: ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6030:1: (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6030:1: (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_ID) ) {
                alt83=1;
            }
            else if ( (LA83_0==RULE_STRING) ) {
                alt83=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }
            switch (alt83) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6031:3: lv_label_2_1= RULE_ID
                    {
                    lv_label_2_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleMapping14667); 

                    			newLeafNode(lv_label_2_1, grammarAccess.getMappingAccess().getLabelIDTerminalRuleCall_2_0_0()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getMappingRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"label",
                            		lv_label_2_1, 
                            		"ID");
                    	    

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6046:8: lv_label_2_2= RULE_STRING
                    {
                    lv_label_2_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleMapping14687); 

                    			newLeafNode(lv_label_2_2, grammarAccess.getMappingAccess().getLabelSTRINGTerminalRuleCall_2_0_1()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getMappingRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"label",
                            		lv_label_2_2, 
                            		"STRING");
                    	    

                    }
                    break;

            }


            }


            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapping"


    // $ANTLR start "entryRuleVisibilityRule"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6072:1: entryRuleVisibilityRule returns [EObject current=null] : iv_ruleVisibilityRule= ruleVisibilityRule EOF ;
    public final EObject entryRuleVisibilityRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVisibilityRule = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6073:2: (iv_ruleVisibilityRule= ruleVisibilityRule EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6074:2: iv_ruleVisibilityRule= ruleVisibilityRule EOF
            {
             newCompositeNode(grammarAccess.getVisibilityRuleRule()); 
            pushFollow(FOLLOW_ruleVisibilityRule_in_entryRuleVisibilityRule14731);
            iv_ruleVisibilityRule=ruleVisibilityRule();

            state._fsp--;

             current =iv_ruleVisibilityRule; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVisibilityRule14741); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVisibilityRule"


    // $ANTLR start "ruleVisibilityRule"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6081:1: ruleVisibilityRule returns [EObject current=null] : ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) ) ;
    public final EObject ruleVisibilityRule() throws RecognitionException {
        EObject current = null;

        Token lv_item_0_0=null;
        Token lv_condition_1_1=null;
        Token lv_condition_1_2=null;
        Token lv_condition_1_3=null;
        Token lv_condition_1_4=null;
        Token lv_condition_1_5=null;
        Token lv_condition_1_6=null;
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        AntlrDatatypeRuleToken lv_state_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6084:28: ( ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6085:1: ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6085:1: ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6085:2: ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6085:2: ( (lv_item_0_0= RULE_ID ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6086:1: (lv_item_0_0= RULE_ID )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6086:1: (lv_item_0_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6087:3: lv_item_0_0= RULE_ID
            {
            lv_item_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVisibilityRule14783); 

            			newLeafNode(lv_item_0_0, grammarAccess.getVisibilityRuleAccess().getItemIDTerminalRuleCall_0_0()); 
            		

            	        if (current==null) {
            	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
            	        }
                   		setWithLastConsumed(
                   			current, 
                   			"item",
                    		lv_item_0_0, 
                    		"ID");
            	    

            }


            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6103:2: ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6104:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6104:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6105:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6105:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
            int alt84=6;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt84=1;
                }
                break;
            case 53:
                {
                alt84=2;
                }
                break;
            case 54:
                {
                alt84=3;
                }
                break;
            case 55:
                {
                alt84=4;
                }
                break;
            case 56:
                {
                alt84=5;
                }
                break;
            case 57:
                {
                alt84=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6106:3: lv_condition_1_1= '=='
                    {
                    lv_condition_1_1=(Token)match(input,52,FOLLOW_52_in_ruleVisibilityRule14808); 

                            newLeafNode(lv_condition_1_1, grammarAccess.getVisibilityRuleAccess().getConditionEqualsSignEqualsSignKeyword_1_0_0());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_1, null);
                    	    

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6118:8: lv_condition_1_2= '>'
                    {
                    lv_condition_1_2=(Token)match(input,53,FOLLOW_53_in_ruleVisibilityRule14837); 

                            newLeafNode(lv_condition_1_2, grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignKeyword_1_0_1());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_2, null);
                    	    

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6130:8: lv_condition_1_3= '<'
                    {
                    lv_condition_1_3=(Token)match(input,54,FOLLOW_54_in_ruleVisibilityRule14866); 

                            newLeafNode(lv_condition_1_3, grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignKeyword_1_0_2());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_3, null);
                    	    

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6142:8: lv_condition_1_4= '>='
                    {
                    lv_condition_1_4=(Token)match(input,55,FOLLOW_55_in_ruleVisibilityRule14895); 

                            newLeafNode(lv_condition_1_4, grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignEqualsSignKeyword_1_0_3());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_4, null);
                    	    

                    }
                    break;
                case 5 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6154:8: lv_condition_1_5= '<='
                    {
                    lv_condition_1_5=(Token)match(input,56,FOLLOW_56_in_ruleVisibilityRule14924); 

                            newLeafNode(lv_condition_1_5, grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignEqualsSignKeyword_1_0_4());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_5, null);
                    	    

                    }
                    break;
                case 6 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6166:8: lv_condition_1_6= '!='
                    {
                    lv_condition_1_6=(Token)match(input,57,FOLLOW_57_in_ruleVisibilityRule14953); 

                            newLeafNode(lv_condition_1_6, grammarAccess.getVisibilityRuleAccess().getConditionExclamationMarkEqualsSignKeyword_1_0_5());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_6, null);
                    	    

                    }
                    break;

            }


            }


            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6181:2: ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( ((LA86_0>=58 && LA86_0<=59)) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6182:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6182:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6183:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6183:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==58) ) {
                        alt85=1;
                    }
                    else if ( (LA85_0==59) ) {
                        alt85=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 85, 0, input);

                        throw nvae;
                    }
                    switch (alt85) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6184:3: lv_sign_2_1= '-'
                            {
                            lv_sign_2_1=(Token)match(input,58,FOLLOW_58_in_ruleVisibilityRule14989); 

                                    newLeafNode(lv_sign_2_1, grammarAccess.getVisibilityRuleAccess().getSignHyphenMinusKeyword_2_0_0());
                                

                            	        if (current==null) {
                            	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                            	        }
                                   		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
                            	    

                            }
                            break;
                        case 2 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6196:8: lv_sign_2_2= '+'
                            {
                            lv_sign_2_2=(Token)match(input,59,FOLLOW_59_in_ruleVisibilityRule15018); 

                                    newLeafNode(lv_sign_2_2, grammarAccess.getVisibilityRuleAccess().getSignPlusSignKeyword_2_0_1());
                                

                            	        if (current==null) {
                            	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                            	        }
                                   		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
                            	    

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6211:3: ( (lv_state_3_0= ruleXState ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6212:1: (lv_state_3_0= ruleXState )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6212:1: (lv_state_3_0= ruleXState )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6213:3: lv_state_3_0= ruleXState
            {
             
            	        newCompositeNode(grammarAccess.getVisibilityRuleAccess().getStateXStateParserRuleCall_3_0()); 
            	    
            pushFollow(FOLLOW_ruleXState_in_ruleVisibilityRule15056);
            lv_state_3_0=ruleXState();

            state._fsp--;


            	        if (current==null) {
            	            current = createModelElementForParent(grammarAccess.getVisibilityRuleRule());
            	        }
                   		set(
                   			current, 
                   			"state",
                    		lv_state_3_0, 
                    		"XState");
            	        afterParserOrEnumRuleCall();
            	    

            }


            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityRule"


    // $ANTLR start "entryRuleItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6237:1: entryRuleItemRef returns [String current=null] : iv_ruleItemRef= ruleItemRef EOF ;
    public final String entryRuleItemRef() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleItemRef = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6238:2: (iv_ruleItemRef= ruleItemRef EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6239:2: iv_ruleItemRef= ruleItemRef EOF
            {
             newCompositeNode(grammarAccess.getItemRefRule()); 
            pushFollow(FOLLOW_ruleItemRef_in_entryRuleItemRef15093);
            iv_ruleItemRef=ruleItemRef();

            state._fsp--;

             current =iv_ruleItemRef.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleItemRef15104); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemRef"


    // $ANTLR start "ruleItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6246:1: ruleItemRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleItemRef() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6249:28: (this_ID_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6250:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleItemRef15143); 

            		current.merge(this_ID_0);
                
             
                newLeafNode(this_ID_0, grammarAccess.getItemRefAccess().getIDTerminalRuleCall()); 
                

            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemRef"


    // $ANTLR start "entryRuleGroupItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6265:1: entryRuleGroupItemRef returns [String current=null] : iv_ruleGroupItemRef= ruleGroupItemRef EOF ;
    public final String entryRuleGroupItemRef() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGroupItemRef = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6266:2: (iv_ruleGroupItemRef= ruleGroupItemRef EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6267:2: iv_ruleGroupItemRef= ruleGroupItemRef EOF
            {
             newCompositeNode(grammarAccess.getGroupItemRefRule()); 
            pushFollow(FOLLOW_ruleGroupItemRef_in_entryRuleGroupItemRef15188);
            iv_ruleGroupItemRef=ruleGroupItemRef();

            state._fsp--;

             current =iv_ruleGroupItemRef.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroupItemRef15199); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupItemRef"


    // $ANTLR start "ruleGroupItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6274:1: ruleGroupItemRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleGroupItemRef() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6277:28: (this_ID_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6278:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleGroupItemRef15238); 

            		current.merge(this_ID_0);
                
             
                newLeafNode(this_ID_0, grammarAccess.getGroupItemRefAccess().getIDTerminalRuleCall()); 
                

            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroupItemRef"


    // $ANTLR start "entryRuleIcon"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6293:1: entryRuleIcon returns [String current=null] : iv_ruleIcon= ruleIcon EOF ;
    public final String entryRuleIcon() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIcon = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6294:2: (iv_ruleIcon= ruleIcon EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6295:2: iv_ruleIcon= ruleIcon EOF
            {
             newCompositeNode(grammarAccess.getIconRule()); 
            pushFollow(FOLLOW_ruleIcon_in_entryRuleIcon15283);
            iv_ruleIcon=ruleIcon();

            state._fsp--;

             current =iv_ruleIcon.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIcon15294); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIcon"


    // $ANTLR start "ruleIcon"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6302:1: ruleIcon returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleIcon() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6305:28: (this_STRING_0= RULE_STRING )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6306:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleIcon15333); 

            		current.merge(this_STRING_0);
                
             
                newLeafNode(this_STRING_0, grammarAccess.getIconAccess().getSTRINGTerminalRuleCall()); 
                

            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIcon"


    // $ANTLR start "entryRuleColorArray"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6321:1: entryRuleColorArray returns [EObject current=null] : iv_ruleColorArray= ruleColorArray EOF ;
    public final EObject entryRuleColorArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColorArray = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6322:2: (iv_ruleColorArray= ruleColorArray EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6323:2: iv_ruleColorArray= ruleColorArray EOF
            {
             newCompositeNode(grammarAccess.getColorArrayRule()); 
            pushFollow(FOLLOW_ruleColorArray_in_entryRuleColorArray15377);
            iv_ruleColorArray=ruleColorArray();

            state._fsp--;

             current =iv_ruleColorArray; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleColorArray15387); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColorArray"


    // $ANTLR start "ruleColorArray"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6330:1: ruleColorArray returns [EObject current=null] : ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) ) ;
    public final EObject ruleColorArray() throws RecognitionException {
        EObject current = null;

        Token lv_item_0_0=null;
        Token lv_condition_1_1=null;
        Token lv_condition_1_2=null;
        Token lv_condition_1_3=null;
        Token lv_condition_1_4=null;
        Token lv_condition_1_5=null;
        Token lv_condition_1_6=null;
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        Token otherlv_4=null;
        Token lv_arg_5_0=null;
        AntlrDatatypeRuleToken lv_state_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6333:28: ( ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6334:1: ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6334:1: ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6334:2: ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6334:2: ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_ID||(LA92_0>=RULE_INT && LA92_0<=RULE_FLOAT)||(LA92_0>=52 && LA92_0<=59)) ) {
                alt92=1;
            }
            else if ( (LA92_0==RULE_STRING) ) {
                int LA92_2 = input.LA(2);

                if ( (LA92_2==51) ) {
                    alt92=1;
                }
            }
            switch (alt92) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6334:3: ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '='
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6334:3: ( (lv_item_0_0= RULE_ID ) )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==RULE_ID) ) {
                        int LA87_1 = input.LA(2);

                        if ( ((LA87_1>=RULE_ID && LA87_1<=RULE_FLOAT)||(LA87_1>=52 && LA87_1<=59)) ) {
                            alt87=1;
                        }
                    }
                    switch (alt87) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6335:1: (lv_item_0_0= RULE_ID )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6335:1: (lv_item_0_0= RULE_ID )
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6336:3: lv_item_0_0= RULE_ID
                            {
                            lv_item_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleColorArray15430); 

                            			newLeafNode(lv_item_0_0, grammarAccess.getColorArrayAccess().getItemIDTerminalRuleCall_0_0_0()); 
                            		

                            	        if (current==null) {
                            	            current = createModelElement(grammarAccess.getColorArrayRule());
                            	        }
                                   		setWithLastConsumed(
                                   			current, 
                                   			"item",
                                    		lv_item_0_0, 
                                    		"ID");
                            	    

                            }


                            }
                            break;

                    }

                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6352:3: ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( ((LA89_0>=52 && LA89_0<=57)) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6353:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6353:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6354:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6354:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
                            int alt88=6;
                            switch ( input.LA(1) ) {
                            case 52:
                                {
                                alt88=1;
                                }
                                break;
                            case 53:
                                {
                                alt88=2;
                                }
                                break;
                            case 54:
                                {
                                alt88=3;
                                }
                                break;
                            case 55:
                                {
                                alt88=4;
                                }
                                break;
                            case 56:
                                {
                                alt88=5;
                                }
                                break;
                            case 57:
                                {
                                alt88=6;
                                }
                                break;
                            default:
                                NoViableAltException nvae =
                                    new NoViableAltException("", 88, 0, input);

                                throw nvae;
                            }

                            switch (alt88) {
                                case 1 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6355:3: lv_condition_1_1= '=='
                                    {
                                    lv_condition_1_1=(Token)match(input,52,FOLLOW_52_in_ruleColorArray15456); 

                                            newLeafNode(lv_condition_1_1, grammarAccess.getColorArrayAccess().getConditionEqualsSignEqualsSignKeyword_0_1_0_0());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_1, null);
                                    	    

                                    }
                                    break;
                                case 2 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6367:8: lv_condition_1_2= '>'
                                    {
                                    lv_condition_1_2=(Token)match(input,53,FOLLOW_53_in_ruleColorArray15485); 

                                            newLeafNode(lv_condition_1_2, grammarAccess.getColorArrayAccess().getConditionGreaterThanSignKeyword_0_1_0_1());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_2, null);
                                    	    

                                    }
                                    break;
                                case 3 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6379:8: lv_condition_1_3= '<'
                                    {
                                    lv_condition_1_3=(Token)match(input,54,FOLLOW_54_in_ruleColorArray15514); 

                                            newLeafNode(lv_condition_1_3, grammarAccess.getColorArrayAccess().getConditionLessThanSignKeyword_0_1_0_2());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_3, null);
                                    	    

                                    }
                                    break;
                                case 4 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6391:8: lv_condition_1_4= '>='
                                    {
                                    lv_condition_1_4=(Token)match(input,55,FOLLOW_55_in_ruleColorArray15543); 

                                            newLeafNode(lv_condition_1_4, grammarAccess.getColorArrayAccess().getConditionGreaterThanSignEqualsSignKeyword_0_1_0_3());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_4, null);
                                    	    

                                    }
                                    break;
                                case 5 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6403:8: lv_condition_1_5= '<='
                                    {
                                    lv_condition_1_5=(Token)match(input,56,FOLLOW_56_in_ruleColorArray15572); 

                                            newLeafNode(lv_condition_1_5, grammarAccess.getColorArrayAccess().getConditionLessThanSignEqualsSignKeyword_0_1_0_4());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_5, null);
                                    	    

                                    }
                                    break;
                                case 6 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6415:8: lv_condition_1_6= '!='
                                    {
                                    lv_condition_1_6=(Token)match(input,57,FOLLOW_57_in_ruleColorArray15601); 

                                            newLeafNode(lv_condition_1_6, grammarAccess.getColorArrayAccess().getConditionExclamationMarkEqualsSignKeyword_0_1_0_5());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_6, null);
                                    	    

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6430:3: ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=58 && LA91_0<=59)) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6431:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6431:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6432:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6432:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                            int alt90=2;
                            int LA90_0 = input.LA(1);

                            if ( (LA90_0==58) ) {
                                alt90=1;
                            }
                            else if ( (LA90_0==59) ) {
                                alt90=2;
                            }
                            else {
                                NoViableAltException nvae =
                                    new NoViableAltException("", 90, 0, input);

                                throw nvae;
                            }
                            switch (alt90) {
                                case 1 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6433:3: lv_sign_2_1= '-'
                                    {
                                    lv_sign_2_1=(Token)match(input,58,FOLLOW_58_in_ruleColorArray15638); 

                                            newLeafNode(lv_sign_2_1, grammarAccess.getColorArrayAccess().getSignHyphenMinusKeyword_0_2_0_0());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
                                    	    

                                    }
                                    break;
                                case 2 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6445:8: lv_sign_2_2= '+'
                                    {
                                    lv_sign_2_2=(Token)match(input,59,FOLLOW_59_in_ruleColorArray15667); 

                                            newLeafNode(lv_sign_2_2, grammarAccess.getColorArrayAccess().getSignPlusSignKeyword_0_2_0_1());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
                                    	    

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6460:3: ( (lv_state_3_0= ruleXState ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6461:1: (lv_state_3_0= ruleXState )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6461:1: (lv_state_3_0= ruleXState )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6462:3: lv_state_3_0= ruleXState
                    {
                     
                    	        newCompositeNode(grammarAccess.getColorArrayAccess().getStateXStateParserRuleCall_0_3_0()); 
                    	    
                    pushFollow(FOLLOW_ruleXState_in_ruleColorArray15705);
                    lv_state_3_0=ruleXState();

                    state._fsp--;


                    	        if (current==null) {
                    	            current = createModelElementForParent(grammarAccess.getColorArrayRule());
                    	        }
                           		set(
                           			current, 
                           			"state",
                            		lv_state_3_0, 
                            		"XState");
                    	        afterParserOrEnumRuleCall();
                    	    

                    }


                    }

                    otherlv_4=(Token)match(input,51,FOLLOW_51_in_ruleColorArray15717); 

                        	newLeafNode(otherlv_4, grammarAccess.getColorArrayAccess().getEqualsSignKeyword_0_4());
                        

                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6482:3: ( (lv_arg_5_0= RULE_STRING ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6483:1: (lv_arg_5_0= RULE_STRING )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6483:1: (lv_arg_5_0= RULE_STRING )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6484:3: lv_arg_5_0= RULE_STRING
            {
            lv_arg_5_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleColorArray15736); 

            			newLeafNode(lv_arg_5_0, grammarAccess.getColorArrayAccess().getArgSTRINGTerminalRuleCall_1_0()); 
            		

            	        if (current==null) {
            	            current = createModelElement(grammarAccess.getColorArrayRule());
            	        }
                   		setWithLastConsumed(
                   			current, 
                   			"arg",
                    		lv_arg_5_0, 
                    		"STRING");
            	    

            }


            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColorArray"


    // $ANTLR start "entryRuleCommand"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6508:1: entryRuleCommand returns [String current=null] : iv_ruleCommand= ruleCommand EOF ;
    public final String entryRuleCommand() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCommand = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6509:2: (iv_ruleCommand= ruleCommand EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6510:2: iv_ruleCommand= ruleCommand EOF
            {
             newCompositeNode(grammarAccess.getCommandRule()); 
            pushFollow(FOLLOW_ruleCommand_in_entryRuleCommand15778);
            iv_ruleCommand=ruleCommand();

            state._fsp--;

             current =iv_ruleCommand.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCommand15789); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommand"


    // $ANTLR start "ruleCommand"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6517:1: ruleCommand returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Number_0= ruleNumber | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING ) ;
    public final AntlrDatatypeRuleToken ruleCommand() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_1=null;
        Token this_STRING_2=null;
        AntlrDatatypeRuleToken this_Number_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6520:28: ( (this_Number_0= ruleNumber | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6521:1: (this_Number_0= ruleNumber | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6521:1: (this_Number_0= ruleNumber | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING )
            int alt93=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case RULE_FLOAT:
            case 58:
                {
                alt93=1;
                }
                break;
            case RULE_ID:
                {
                alt93=2;
                }
                break;
            case RULE_STRING:
                {
                alt93=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6522:5: this_Number_0= ruleNumber
                    {
                     
                            newCompositeNode(grammarAccess.getCommandAccess().getNumberParserRuleCall_0()); 
                        
                    pushFollow(FOLLOW_ruleNumber_in_ruleCommand15836);
                    this_Number_0=ruleNumber();

                    state._fsp--;


                    		current.merge(this_Number_0);
                        
                     
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6533:10: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleCommand15862); 

                    		current.merge(this_ID_1);
                        
                     
                        newLeafNode(this_ID_1, grammarAccess.getCommandAccess().getIDTerminalRuleCall_1()); 
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6541:10: this_STRING_2= RULE_STRING
                    {
                    this_STRING_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleCommand15888); 

                    		current.merge(this_STRING_2);
                        
                     
                        newLeafNode(this_STRING_2, grammarAccess.getCommandAccess().getSTRINGTerminalRuleCall_2()); 
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommand"


    // $ANTLR start "entryRuleNumber"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6556:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6557:2: (iv_ruleNumber= ruleNumber EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6558:2: iv_ruleNumber= ruleNumber EOF
            {
             newCompositeNode(grammarAccess.getNumberRule()); 
            pushFollow(FOLLOW_ruleNumber_in_entryRuleNumber15934);
            iv_ruleNumber=ruleNumber();

            state._fsp--;

             current =iv_ruleNumber.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumber15945); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6565:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? (this_INT_1= RULE_INT | this_FLOAT_2= RULE_FLOAT ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;
        Token this_FLOAT_2=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6568:28: ( ( (kw= '-' )? (this_INT_1= RULE_INT | this_FLOAT_2= RULE_FLOAT ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6569:1: ( (kw= '-' )? (this_INT_1= RULE_INT | this_FLOAT_2= RULE_FLOAT ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6569:1: ( (kw= '-' )? (this_INT_1= RULE_INT | this_FLOAT_2= RULE_FLOAT ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6569:2: (kw= '-' )? (this_INT_1= RULE_INT | this_FLOAT_2= RULE_FLOAT )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6569:2: (kw= '-' )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==58) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6570:2: kw= '-'
                    {
                    kw=(Token)match(input,58,FOLLOW_58_in_ruleNumber15984); 

                            current.merge(kw);
                            newLeafNode(kw, grammarAccess.getNumberAccess().getHyphenMinusKeyword_0()); 
                        

                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6575:3: (this_INT_1= RULE_INT | this_FLOAT_2= RULE_FLOAT )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_INT) ) {
                alt95=1;
            }
            else if ( (LA95_0==RULE_FLOAT) ) {
                alt95=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6575:8: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber16002); 

                    		current.merge(this_INT_1);
                        
                     
                        newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0()); 
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6583:10: this_FLOAT_2= RULE_FLOAT
                    {
                    this_FLOAT_2=(Token)match(input,RULE_FLOAT,FOLLOW_RULE_FLOAT_in_ruleNumber16028); 

                    		current.merge(this_FLOAT_2);
                        
                     
                        newLeafNode(this_FLOAT_2, grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1_1()); 
                        

                    }
                    break;

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleXState"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6598:1: entryRuleXState returns [String current=null] : iv_ruleXState= ruleXState EOF ;
    public final String entryRuleXState() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXState = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6599:2: (iv_ruleXState= ruleXState EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6600:2: iv_ruleXState= ruleXState EOF
            {
             newCompositeNode(grammarAccess.getXStateRule()); 
            pushFollow(FOLLOW_ruleXState_in_entryRuleXState16075);
            iv_ruleXState=ruleXState();

            state._fsp--;

             current =iv_ruleXState.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleXState16086); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXState"


    // $ANTLR start "ruleXState"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6607:1: ruleXState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleXState() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token this_ID_1=null;
        Token this_STRING_2=null;
        Token this_FLOAT_3=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6610:28: ( (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6611:1: (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6611:1: (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT )
            int alt96=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt96=1;
                }
                break;
            case RULE_ID:
                {
                alt96=2;
                }
                break;
            case RULE_STRING:
                {
                alt96=3;
                }
                break;
            case RULE_FLOAT:
                {
                alt96=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6611:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleXState16126); 

                    		current.merge(this_INT_0);
                        
                     
                        newLeafNode(this_INT_0, grammarAccess.getXStateAccess().getINTTerminalRuleCall_0()); 
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6619:10: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXState16152); 

                    		current.merge(this_ID_1);
                        
                     
                        newLeafNode(this_ID_1, grammarAccess.getXStateAccess().getIDTerminalRuleCall_1()); 
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6627:10: this_STRING_2= RULE_STRING
                    {
                    this_STRING_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXState16178); 

                    		current.merge(this_STRING_2);
                        
                     
                        newLeafNode(this_STRING_2, grammarAccess.getXStateAccess().getSTRINGTerminalRuleCall_2()); 
                        

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6635:10: this_FLOAT_3= RULE_FLOAT
                    {
                    this_FLOAT_3=(Token)match(input,RULE_FLOAT,FOLLOW_RULE_FLOAT_in_ruleXState16204); 

                    		current.merge(this_FLOAT_3);
                        
                     
                        newLeafNode(this_FLOAT_3, grammarAccess.getXStateAccess().getFLOATTerminalRuleCall_3()); 
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXState"

    // Delegated rules


    protected DFA29 dfa29 = new DFA29(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA77 dfa77 = new DFA77(this);
    static final String DFA29_eotS =
        "\13\uffff";
    static final String DFA29_eofS =
        "\1\1\12\uffff";
    static final String DFA29_minS =
        "\1\15\12\uffff";
    static final String DFA29_maxS =
        "\1\62\12\uffff";
    static final String DFA29_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA29_specialS =
        "\1\0\12\uffff}>";
    static final String[] DFA29_transitionS = {
            "\1\3\1\4\3\1\1\2\1\7\2\uffff\1\10\1\12\3\1\1\5\1\6\1\11\1\1"+
            "\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\2\uffff\2\1"+
            "\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1516:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_0 = input.LA(1);

                         
                        int index29_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA29_0==EOF||(LA29_0>=15 && LA29_0<=17)||(LA29_0>=24 && LA29_0<=26)||LA29_0==30||LA29_0==32||LA29_0==35||(LA29_0>=37 && LA29_0<=38)||LA29_0==40||(LA29_0>=43 && LA29_0<=44)||LA29_0==46||LA29_0==50) ) {s = 1;}

                        else if ( LA29_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA29_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA29_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA29_0 ==27 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA29_0 ==28 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA29_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA29_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA29_0 ==29 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA29_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                         
                        input.seek(index29_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA34_eotS =
        "\12\uffff";
    static final String DFA34_eofS =
        "\1\1\11\uffff";
    static final String DFA34_minS =
        "\1\15\11\uffff";
    static final String DFA34_maxS =
        "\1\62\11\uffff";
    static final String DFA34_acceptS =
        "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String DFA34_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA34_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\7\2\uffff\1\10\1\11\3\1\1\5\2\uffff"+
            "\1\1\1\6\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\2\uffff\2\1"+
            "\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA34_eot = DFA.unpackEncodedString(DFA34_eotS);
    static final short[] DFA34_eof = DFA.unpackEncodedString(DFA34_eofS);
    static final char[] DFA34_min = DFA.unpackEncodedStringToUnsignedChars(DFA34_minS);
    static final char[] DFA34_max = DFA.unpackEncodedStringToUnsignedChars(DFA34_maxS);
    static final short[] DFA34_accept = DFA.unpackEncodedString(DFA34_acceptS);
    static final short[] DFA34_special = DFA.unpackEncodedString(DFA34_specialS);
    static final short[][] DFA34_transition;

    static {
        int numStates = DFA34_transitionS.length;
        DFA34_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA34_transition[i] = DFA.unpackEncodedString(DFA34_transitionS[i]);
        }
    }

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = DFA34_eot;
            this.eof = DFA34_eof;
            this.min = DFA34_min;
            this.max = DFA34_max;
            this.accept = DFA34_accept;
            this.special = DFA34_special;
            this.transition = DFA34_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1986:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_0 = input.LA(1);

                         
                        int index34_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA34_0==EOF||(LA34_0>=16 && LA34_0<=17)||(LA34_0>=24 && LA34_0<=26)||LA34_0==30||LA34_0==32||LA34_0==35||(LA34_0>=37 && LA34_0<=38)||LA34_0==40||(LA34_0>=43 && LA34_0<=44)||LA34_0==46||LA34_0==50) ) {s = 1;}

                        else if ( LA34_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA34_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA34_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA34_0 ==27 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA34_0 ==31 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA34_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA34_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA34_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index34_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\13\uffff";
    static final String DFA39_eofS =
        "\1\1\12\uffff";
    static final String DFA39_minS =
        "\1\15\12\uffff";
    static final String DFA39_maxS =
        "\1\62\12\uffff";
    static final String DFA39_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA39_specialS =
        "\1\0\12\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\10\2\uffff\1\11\1\12\3\1\1\uffff"+
            "\1\6\1\uffff\1\1\1\uffff\1\1\1\5\1\7\1\1\1\uffff\2\1\1\uffff"+
            "\1\1\2\uffff\2\1\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2396:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_0 = input.LA(1);

                         
                        int index39_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA39_0==EOF||(LA39_0>=16 && LA39_0<=17)||(LA39_0>=24 && LA39_0<=26)||LA39_0==30||LA39_0==32||LA39_0==35||(LA39_0>=37 && LA39_0<=38)||LA39_0==40||(LA39_0>=43 && LA39_0<=44)||LA39_0==46||LA39_0==50) ) {s = 1;}

                        else if ( LA39_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA39_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA39_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA39_0 ==33 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA39_0 ==28 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA39_0 ==34 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA39_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA39_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA39_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                         
                        input.seek(index39_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA44_eotS =
        "\12\uffff";
    static final String DFA44_eofS =
        "\1\1\11\uffff";
    static final String DFA44_minS =
        "\1\15\11\uffff";
    static final String DFA44_maxS =
        "\1\62\11\uffff";
    static final String DFA44_acceptS =
        "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String DFA44_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA44_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\7\2\uffff\1\10\1\11\3\1\1\6\2\uffff"+
            "\1\1\1\uffff\1\1\2\uffff\1\1\1\5\2\1\1\uffff\1\1\2\uffff\2\1"+
            "\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
    static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
    static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
    static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
    static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
    static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
    static final short[][] DFA44_transition;

    static {
        int numStates = DFA44_transitionS.length;
        DFA44_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
        }
    }

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = DFA44_eot;
            this.eof = DFA44_eof;
            this.min = DFA44_min;
            this.max = DFA44_max;
            this.accept = DFA44_accept;
            this.special = DFA44_special;
            this.transition = DFA44_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2840:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_0 = input.LA(1);

                         
                        int index44_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA44_0==EOF||(LA44_0>=16 && LA44_0<=17)||(LA44_0>=24 && LA44_0<=26)||LA44_0==30||LA44_0==32||LA44_0==35||(LA44_0>=37 && LA44_0<=38)||LA44_0==40||(LA44_0>=43 && LA44_0<=44)||LA44_0==46||LA44_0==50) ) {s = 1;}

                        else if ( LA44_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA44_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA44_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA44_0 ==36 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA44_0 ==27 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA44_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA44_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA44_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index44_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA60_eotS =
        "\12\uffff";
    static final String DFA60_eofS =
        "\1\1\11\uffff";
    static final String DFA60_minS =
        "\1\15\11\uffff";
    static final String DFA60_maxS =
        "\1\62\11\uffff";
    static final String DFA60_acceptS =
        "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String DFA60_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA60_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\7\2\uffff\1\10\1\11\3\1\3\uffff\1"+
            "\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\5\1\6\2"+
            "\1\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA60_eot = DFA.unpackEncodedString(DFA60_eotS);
    static final short[] DFA60_eof = DFA.unpackEncodedString(DFA60_eofS);
    static final char[] DFA60_min = DFA.unpackEncodedStringToUnsignedChars(DFA60_minS);
    static final char[] DFA60_max = DFA.unpackEncodedStringToUnsignedChars(DFA60_maxS);
    static final short[] DFA60_accept = DFA.unpackEncodedString(DFA60_acceptS);
    static final short[] DFA60_special = DFA.unpackEncodedString(DFA60_specialS);
    static final short[][] DFA60_transition;

    static {
        int numStates = DFA60_transitionS.length;
        DFA60_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA60_transition[i] = DFA.unpackEncodedString(DFA60_transitionS[i]);
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = DFA60_eot;
            this.eof = DFA60_eof;
            this.min = DFA60_min;
            this.max = DFA60_max;
            this.accept = DFA60_accept;
            this.special = DFA60_special;
            this.transition = DFA60_transition;
        }
        public String getDescription() {
            return "()+ loopback of 4028:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_0 = input.LA(1);

                         
                        int index60_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA60_0==EOF||(LA60_0>=16 && LA60_0<=17)||(LA60_0>=24 && LA60_0<=26)||LA60_0==30||LA60_0==32||LA60_0==35||(LA60_0>=37 && LA60_0<=38)||LA60_0==40||(LA60_0>=43 && LA60_0<=44)||LA60_0==46||LA60_0==50) ) {s = 1;}

                        else if ( LA60_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA60_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA60_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA60_0 ==41 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA60_0 ==42 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA60_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA60_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA60_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index60_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA77_eotS =
        "\13\uffff";
    static final String DFA77_eofS =
        "\1\1\12\uffff";
    static final String DFA77_minS =
        "\1\15\12\uffff";
    static final String DFA77_maxS =
        "\1\62\12\uffff";
    static final String DFA77_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA77_specialS =
        "\1\0\12\uffff}>";
    static final String[] DFA77_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\10\2\uffff\1\11\1\12\3\1\3\uffff"+
            "\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\2\uffff"+
            "\2\1\1\uffff\1\1\1\5\1\6\1\7\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA77_eot = DFA.unpackEncodedString(DFA77_eotS);
    static final short[] DFA77_eof = DFA.unpackEncodedString(DFA77_eofS);
    static final char[] DFA77_min = DFA.unpackEncodedStringToUnsignedChars(DFA77_minS);
    static final char[] DFA77_max = DFA.unpackEncodedStringToUnsignedChars(DFA77_maxS);
    static final short[] DFA77_accept = DFA.unpackEncodedString(DFA77_acceptS);
    static final short[] DFA77_special = DFA.unpackEncodedString(DFA77_specialS);
    static final short[][] DFA77_transition;

    static {
        int numStates = DFA77_transitionS.length;
        DFA77_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA77_transition[i] = DFA.unpackEncodedString(DFA77_transitionS[i]);
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = DFA77_eot;
            this.eof = DFA77_eof;
            this.min = DFA77_min;
            this.max = DFA77_max;
            this.accept = DFA77_accept;
            this.special = DFA77_special;
            this.transition = DFA77_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5197:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_0 = input.LA(1);

                         
                        int index77_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA77_0==EOF||(LA77_0>=16 && LA77_0<=17)||(LA77_0>=24 && LA77_0<=26)||LA77_0==30||LA77_0==32||LA77_0==35||(LA77_0>=37 && LA77_0<=38)||LA77_0==40||(LA77_0>=43 && LA77_0<=44)||LA77_0==46||LA77_0==50) ) {s = 1;}

                        else if ( LA77_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA77_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA77_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA77_0 ==47 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA77_0 ==48 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA77_0 ==49 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA77_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA77_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA77_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                         
                        input.seek(index77_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_ruleSitemapModel_in_entryRuleSitemapModel75 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSitemapModel85 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_ruleSitemapModel122 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleSitemap_in_ruleSitemapModel144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSitemap_in_entryRuleSitemap179 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSitemap189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSitemap231 = new BitSet(new long[]{0x000000000000E000L});
    public static final BitSet FOLLOW_13_in_ruleSitemap249 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSitemap266 = new BitSet(new long[]{0x000000000000C000L});
    public static final BitSet FOLLOW_14_in_ruleSitemap286 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSitemap303 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleSitemap322 = new BitSet(new long[]{0x0004596947020000L});
    public static final BitSet FOLLOW_ruleWidget_in_ruleSitemap343 = new BitSet(new long[]{0x0004596947030000L});
    public static final BitSet FOLLOW_16_in_ruleSitemap356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWidget_in_entryRuleWidget392 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWidget402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLinkableWidget_in_ruleWidget449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonLinkableWidget_in_ruleWidget476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonLinkableWidget_in_entryRuleNonLinkableWidget511 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNonLinkableWidget521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitch_in_ruleNonLinkableWidget568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSelection_in_ruleNonLinkableWidget595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSlider_in_ruleNonLinkableWidget622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleList_in_ruleNonLinkableWidget649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetpoint_in_ruleNonLinkableWidget676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVideo_in_ruleNonLinkableWidget703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChart_in_ruleNonLinkableWidget730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWebview_in_ruleNonLinkableWidget757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleColorpicker_in_ruleNonLinkableWidget784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMapview_in_ruleNonLinkableWidget811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLinkableWidget_in_entryRuleLinkableWidget846 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLinkableWidget856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleText_in_ruleLinkableWidget904 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleGroup_in_ruleLinkableWidget931 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleImage_in_ruleLinkableWidget958 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleFrame_in_ruleLinkableWidget985 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_15_in_ruleLinkableWidget998 = new BitSet(new long[]{0x0004596947020000L});
    public static final BitSet FOLLOW_ruleWidget_in_ruleLinkableWidget1019 = new BitSet(new long[]{0x0004596947030000L});
    public static final BitSet FOLLOW_16_in_ruleLinkableWidget1032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFrame_in_entryRuleFrame1070 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFrame1080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleFrame1126 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_18_in_ruleFrame1184 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleFrame1205 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleFrame1273 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFrame1292 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleFrame1312 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleFrame1388 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleFrame1409 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleFrame1477 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1499 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleFrame1512 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1533 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleFrame1547 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleFrame1616 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1638 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleFrame1651 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1672 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleFrame1686 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleFrame1755 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleFrame1777 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleFrame1790 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleFrame1811 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleFrame1825 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_ruleText_in_entryRuleText1903 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleText1913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleText1959 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_18_in_ruleText2017 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleText2038 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleText2106 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleText2125 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleText2145 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleText2221 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleText2242 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleText2310 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2332 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleText2345 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2366 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleText2380 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleText2449 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2471 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleText2484 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2505 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleText2519 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleText2588 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleText2610 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleText2623 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleText2644 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleText2658 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_ruleGroup_in_entryRuleGroup2736 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroup2746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleGroup2783 = new BitSet(new long[]{0x0000000000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleGroup2841 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleGroupItemRef_in_ruleGroup2862 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleGroup2930 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleGroup2949 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleGroup2969 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleGroup3045 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleGroup3066 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleGroup3134 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3156 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleGroup3169 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3190 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleGroup3204 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleGroup3273 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3295 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleGroup3308 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3329 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleGroup3343 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleGroup3412 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleGroup3434 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleGroup3447 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleGroup3468 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleGroup3482 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_ruleImage_in_entryRuleImage3566 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImage3576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleImage3613 = new BitSet(new long[]{0x0000000038CC6000L});
    public static final BitSet FOLLOW_18_in_ruleImage3671 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleImage3692 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_13_in_ruleImage3760 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleImage3779 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleImage3799 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_14_in_ruleImage3875 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleImage3896 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_27_in_ruleImage3964 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleImage3981 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_28_in_ruleImage4054 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleImage4071 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_19_in_ruleImage4144 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4166 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4179 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4200 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4214 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_22_in_ruleImage4283 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4305 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4318 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4339 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4353 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_29_in_ruleImage4422 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4444 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4457 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4478 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4492 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_23_in_ruleImage4561 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleImage4583 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4596 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleImage4617 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4631 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_ruleVideo_in_entryRuleVideo4715 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVideo4725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleVideo4762 = new BitSet(new long[]{0x0000000088CC6000L});
    public static final BitSet FOLLOW_18_in_ruleVideo4820 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleVideo4841 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_13_in_ruleVideo4909 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVideo4928 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVideo4948 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_14_in_ruleVideo5024 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleVideo5045 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_27_in_ruleVideo5113 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVideo5130 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_31_in_ruleVideo5203 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVideo5220 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_19_in_ruleVideo5293 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5315 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleVideo5328 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5349 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleVideo5363 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_22_in_ruleVideo5432 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5454 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleVideo5467 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5488 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleVideo5502 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_23_in_ruleVideo5571 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleVideo5593 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleVideo5606 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleVideo5627 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleVideo5641 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_ruleChart_in_entryRuleChart5725 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChart5735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleChart5772 = new BitSet(new long[]{0x0000000610CC6000L});
    public static final BitSet FOLLOW_18_in_ruleChart5830 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleChart5851 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_13_in_ruleChart5919 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleChart5938 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleChart5958 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_14_in_ruleChart6034 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleChart6055 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_33_in_ruleChart6123 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleChart6140 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_28_in_ruleChart6213 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleChart6230 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_34_in_ruleChart6303 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleChart6320 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_19_in_ruleChart6393 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6415 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleChart6428 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6449 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleChart6463 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_22_in_ruleChart6532 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6554 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleChart6567 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6588 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleChart6602 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_23_in_ruleChart6671 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleChart6693 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleChart6706 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleChart6727 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleChart6741 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_ruleWebview_in_entryRuleWebview6825 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWebview6835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleWebview6872 = new BitSet(new long[]{0x0000001008CC6000L});
    public static final BitSet FOLLOW_18_in_ruleWebview6930 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleWebview6951 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_13_in_ruleWebview7019 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWebview7038 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleWebview7058 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_14_in_ruleWebview7134 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleWebview7155 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_36_in_ruleWebview7223 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleWebview7240 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_27_in_ruleWebview7313 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleWebview7330 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_19_in_ruleWebview7403 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7425 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleWebview7438 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7459 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleWebview7473 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_22_in_ruleWebview7542 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7564 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleWebview7577 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7598 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleWebview7612 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_23_in_ruleWebview7681 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleWebview7703 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleWebview7716 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleWebview7737 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleWebview7751 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_ruleMapview_in_entryRuleMapview7835 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMapview7845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleMapview7882 = new BitSet(new long[]{0x0000001000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleMapview7940 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleMapview7961 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleMapview8029 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleMapview8048 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleMapview8068 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleMapview8144 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleMapview8165 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_36_in_ruleMapview8233 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleMapview8250 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleMapview8323 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleMapview8345 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleMapview8358 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleMapview8379 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleMapview8393 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleMapview8462 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleMapview8484 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleMapview8497 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleMapview8518 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleMapview8532 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleMapview8601 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleMapview8623 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleMapview8636 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleMapview8657 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleMapview8671 = new BitSet(new long[]{0x0000001000CC6002L});
    public static final BitSet FOLLOW_ruleSwitch_in_entryRuleSwitch8755 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSwitch8765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleSwitch8802 = new BitSet(new long[]{0x0000008000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSwitch8860 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSwitch8881 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSwitch8949 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSwitch8968 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSwitch8988 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSwitch9064 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSwitch9085 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_39_in_ruleSwitch9153 = new BitSet(new long[]{0x04000000000000F0L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSwitch9174 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch9187 = new BitSet(new long[]{0x04000000000000F0L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSwitch9208 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch9222 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSwitch9290 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch9312 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch9325 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch9346 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch9360 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSwitch9429 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch9451 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch9464 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch9485 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch9499 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSwitch9568 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSwitch9590 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch9603 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSwitch9624 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch9638 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_ruleSlider_in_entryRuleSlider9722 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSlider9732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_ruleSlider9769 = new BitSet(new long[]{0x0000060000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSlider9827 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSlider9848 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSlider9916 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSlider9935 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSlider9955 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSlider10031 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSlider10052 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_41_in_ruleSlider10120 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleSlider10137 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_42_in_ruleSlider10215 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSlider10295 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider10317 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSlider10330 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider10351 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSlider10365 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSlider10434 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider10456 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSlider10469 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider10490 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSlider10504 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSlider10573 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSlider10595 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSlider10608 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSlider10629 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSlider10643 = new BitSet(new long[]{0x0000060000CC6002L});
    public static final BitSet FOLLOW_ruleSelection_in_entryRuleSelection10727 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSelection10737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleSelection10774 = new BitSet(new long[]{0x0000008000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSelection10832 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSelection10853 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSelection10921 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSelection10940 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSelection10960 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSelection11036 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSelection11057 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_39_in_ruleSelection11125 = new BitSet(new long[]{0x04000000000000F0L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSelection11146 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection11159 = new BitSet(new long[]{0x04000000000000F0L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSelection11180 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection11194 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSelection11262 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection11284 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection11297 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection11318 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection11332 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSelection11401 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection11423 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection11436 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection11457 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection11471 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSelection11540 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSelection11562 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection11575 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSelection11596 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection11610 = new BitSet(new long[]{0x0000008000CC6002L});
    public static final BitSet FOLLOW_ruleList_in_entryRuleList11694 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleList11704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_ruleList11741 = new BitSet(new long[]{0x0000200000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleList11799 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleList11820 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleList11888 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleList11907 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleList11927 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleList12004 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleList12025 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleList12040 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleList12057 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleList12131 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList12153 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleList12166 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList12187 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleList12201 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleList12270 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList12292 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleList12305 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList12326 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleList12340 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleList12409 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleList12431 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleList12444 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleList12465 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleList12479 = new BitSet(new long[]{0x0000200000CC6002L});
    public static final BitSet FOLLOW_ruleSetpoint_in_entryRuleSetpoint12563 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetpoint12573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_ruleSetpoint12610 = new BitSet(new long[]{0x0003800000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSetpoint12668 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSetpoint12689 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSetpoint12757 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSetpoint12776 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSetpoint12796 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSetpoint12872 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSetpoint12893 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_47_in_ruleSetpoint12961 = new BitSet(new long[]{0x04000000000000C0L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleSetpoint12982 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_48_in_ruleSetpoint13050 = new BitSet(new long[]{0x04000000000000C0L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleSetpoint13071 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_49_in_ruleSetpoint13139 = new BitSet(new long[]{0x04000000000000C0L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleSetpoint13160 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSetpoint13228 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint13250 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSetpoint13263 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint13284 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSetpoint13298 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSetpoint13367 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint13389 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSetpoint13402 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint13423 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSetpoint13437 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSetpoint13506 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSetpoint13528 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSetpoint13541 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSetpoint13562 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSetpoint13576 = new BitSet(new long[]{0x0003800000CC6002L});
    public static final BitSet FOLLOW_ruleColorpicker_in_entryRuleColorpicker13660 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleColorpicker13670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_ruleColorpicker13707 = new BitSet(new long[]{0x0000020000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleColorpicker13765 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleColorpicker13786 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleColorpicker13854 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleColorpicker13873 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleColorpicker13893 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleColorpicker13969 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleColorpicker13990 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_41_in_ruleColorpicker14058 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleColorpicker14075 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleColorpicker14148 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker14170 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleColorpicker14183 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker14204 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleColorpicker14218 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleColorpicker14287 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker14309 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleColorpicker14322 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker14343 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleColorpicker14357 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleColorpicker14426 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleColorpicker14448 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleColorpicker14461 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleColorpicker14482 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleColorpicker14496 = new BitSet(new long[]{0x0000020000CC6002L});
    public static final BitSet FOLLOW_ruleMapping_in_entryRuleMapping14580 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMapping14590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCommand_in_ruleMapping14636 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleMapping14648 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleMapping14667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleMapping14687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_entryRuleVisibilityRule14731 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVisibilityRule14741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVisibilityRule14783 = new BitSet(new long[]{0x03F0000000000000L});
    public static final BitSet FOLLOW_52_in_ruleVisibilityRule14808 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_53_in_ruleVisibilityRule14837 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_54_in_ruleVisibilityRule14866 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_55_in_ruleVisibilityRule14895 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_56_in_ruleVisibilityRule14924 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_57_in_ruleVisibilityRule14953 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_58_in_ruleVisibilityRule14989 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_59_in_ruleVisibilityRule15018 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleXState_in_ruleVisibilityRule15056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleItemRef_in_entryRuleItemRef15093 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleItemRef15104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleItemRef15143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroupItemRef_in_entryRuleGroupItemRef15188 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroupItemRef15199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleGroupItemRef15238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIcon_in_entryRuleIcon15283 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIcon15294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleIcon15333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleColorArray_in_entryRuleColorArray15377 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleColorArray15387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleColorArray15430 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_52_in_ruleColorArray15456 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_53_in_ruleColorArray15485 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_54_in_ruleColorArray15514 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_55_in_ruleColorArray15543 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_56_in_ruleColorArray15572 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_57_in_ruleColorArray15601 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_58_in_ruleColorArray15638 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_59_in_ruleColorArray15667 = new BitSet(new long[]{0x0FF00000000000F0L});
    public static final BitSet FOLLOW_ruleXState_in_ruleColorArray15705 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleColorArray15717 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleColorArray15736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCommand_in_entryRuleCommand15778 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCommand15789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleCommand15836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleCommand15862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleCommand15888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_entryRuleNumber15934 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumber15945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleNumber15984 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber16002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_FLOAT_in_ruleNumber16028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXState_in_entryRuleXState16075 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXState16086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleXState16126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleXState16152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleXState16178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_FLOAT_in_ruleXState16204 = new BitSet(new long[]{0x0000000000000002L});

}
